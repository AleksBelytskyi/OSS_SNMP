<?xml version="1.0" encoding="utf-8"?>
<project version="2.0.0a5" title="OSS_SNMP">
  <file path="MIBS/Host.php" hash="bad0d343317e705f6d40373ed220e328" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="Default">
      <name>Host</name>
      <full_name>\OSS_SNMP\MIBS\Host</full_name>
      <extends>OSS_SNMP\MIB</extends>
      <docblock line="44">
        <description><![CDATA[A class for performing SNMP V2 queries on generic devices]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
    </class>
  </file>
  <file path="MIBS/System.php" hash="1b2164895028bdda028161e7c3f15e71" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="Default">
      <name>System</name>
      <full_name>\OSS_SNMP\MIBS\System</full_name>
      <extends>OSS_SNMP\MIB</extends>
      <docblock line="44">
        <description><![CDATA[A class for performing SNMP V2 queries on generic devices]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="46" package="Default">
        <name>OID_SYSTEM_DESCRIPTION</name>
        <full_name>OID_SYSTEM_DESCRIPTION</full_name>
        <value><![CDATA['.1.3.6.1.2.1.1.1.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="47" package="Default">
        <name>OID_SYSTEM_UPTIME</name>
        <full_name>OID_SYSTEM_UPTIME</full_name>
        <value><![CDATA['.1.3.6.1.2.1.1.3.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="48" package="Default">
        <name>OID_SYSTEM_CONTACT</name>
        <full_name>OID_SYSTEM_CONTACT</full_name>
        <value><![CDATA['.1.3.6.1.2.1.1.4.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="49" package="Default">
        <name>OID_SYSTEM_NAME</name>
        <full_name>OID_SYSTEM_NAME</full_name>
        <value><![CDATA['.1.3.6.1.2.1.1.5.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="50" package="Default">
        <name>OID_SYSTEM_LOCATION</name>
        <full_name>OID_SYSTEM_LOCATION</full_name>
        <value><![CDATA['.1.3.6.1.2.1.1.6.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="51" package="Default">
        <name>OID_SYSTEM_SERVICES</name>
        <full_name>OID_SYSTEM_SERVICES</full_name>
        <value><![CDATA['.1.3.6.1.2.1.1.7.0']]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="58" package="Default">
        <name>description</name>
        <full_name>description</full_name>
        <docblock line="58">
          <description><![CDATA[Returns the system description of the device]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="return" description="The system description of the device" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="72" package="Default">
        <name>uptime</name>
        <full_name>uptime</full_name>
        <docblock line="72">
          <description><![CDATA[Returns the system uptime of the device]]></description>
          <long-description><![CDATA[<p>"The time (in hundredths of a second) since the
network management portion of the system was last
re-initialized."</p>]]></long-description>
          <tag line="72" name="return" description="The system uptime of the device (in timeticks)" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="82" package="Default">
        <name>contact</name>
        <full_name>contact</full_name>
        <docblock line="82">
          <description><![CDATA[Returns the system contact of the device]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="82" name="return" description="The system contact of the device" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="92" package="Default">
        <name>name</name>
        <full_name>name</full_name>
        <docblock line="92">
          <description><![CDATA[Returns the system name of the device]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="return" description="The system name of the device" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="102" package="Default">
        <name>location</name>
        <full_name>location</full_name>
        <docblock line="102">
          <description><![CDATA[Returns the system location of the device]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="return" description="The system location of the device" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="137" package="Default">
        <name>services</name>
        <full_name>services</full_name>
        <docblock line="137">
          <description><![CDATA[Returns the system services of the device]]></description>
          <long-description><![CDATA[<p>"A value which indicates the set of services that
this entity primarily offers.</p>

<p>The value is a sum.  This sum initially takes the
value zero, Then, for each layer, L, in the range
1 through 7, that this node performs transactions
for, 2 raised to (L - 1) is added to the sum.  For
example, a node which performs primarily routing
functions would have a value of 4 (2^(3-1)).  In
contrast, a node which is a host offering
application services would have a value of 72
(2^(4-1) + 2^(7-1)).  Note that in the context of
the Internet suite of protocols, values should be
calculated accordingly:</p>

<pre><code>layer  functionality
    1  physical (e.g., repeaters)
    2  datalink/subnetwork (e.g., bridges)
    3  internet (e.g., IP gateways)
    4  end-to-end  (e.g., IP hosts)
    7  applications (e.g., mail relays)
</code></pre>

<p>For systems including OSI protocols, layers 5 and
6 may also be counted."</p>]]></long-description>
          <tag line="137" name="return" description="The system services of the device" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="151" package="Default">
        <name>getAll</name>
        <full_name>getAll</full_name>
        <docblock line="151">
          <description><![CDATA[Gets all system values as an associate array]]></description>
          <long-description><![CDATA[<p>The keys of the array are contact, description, location,
    name, services, uptime</p>]]></long-description>
          <tag line="151" name="return" description="All system values as an associate array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="MIBS/Bridge.php" hash="cedc198e21c57e3381667748658cb572" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="Default">
      <name>Bridge</name>
      <full_name>\OSS_SNMP\MIBS\Bridge</full_name>
      <extends>OSS_SNMP\MIB</extends>
      <docblock line="44">
        <description><![CDATA[A class for performing SNMP V2 queries on generic devices]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="46" package="Default">
        <name>OID_BRIDGE_BASE_PORT_IF_INDEX</name>
        <full_name>OID_BRIDGE_BASE_PORT_IF_INDEX</full_name>
        <value><![CDATA['.1.3.6.1.2.1.17.1.4.1.2']]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="56" package="Default">
        <name>basePortIfIndexes</name>
        <full_name>basePortIfIndexes</full_name>
        <docblock line="56">
          <description><![CDATA[Returns an associate array of STP port IDs (key) to interface IDs (value)]]></description>
          <long-description><![CDATA[<p>e.g.  [22] => 10122</p>]]></long-description>
          <tag line="56" name="return" description="Associate array of STP port IDs (key) to interface IDs (value)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="MIBS/Asterisk/Indications.php" hash="29de0f033bc5e2f604fdfedbd719f48d" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Asterisk" line="45" package="Default">
      <name>Indications</name>
      <full_name>\OSS_SNMP\MIBS\Asterisk\Indications</full_name>
      <extends>OSS_SNMP\MIB</extends>
      <docblock line="45">
        <description><![CDATA[A class for performing SNMP V2 queries on Asterisk]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="45" name="see" description="\OSS_SNMP\MIBS\Asterisk\https://wiki.asterisk.org/wiki/display/AST/Asterisk+MIB+Definitions" refers="\OSS_SNMP\MIBS\Asterisk\https://wiki.asterisk.org/wiki/display/AST/Asterisk+MIB+Definitions"/>
        <tag line="45" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="45" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="48" package="Default">
        <name>OID_ASTERISK_INDICATIONS_COUNT</name>
        <full_name>OID_ASTERISK_INDICATIONS_COUNT</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.4.1.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="50" package="Default">
        <name>OID_ASTERISK_DEFAULT_INDICATION</name>
        <full_name>OID_ASTERISK_DEFAULT_INDICATION</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.4.2.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="52" package="Default">
        <name>OID_ASTERISK_INDICATIONS_COUNTRY</name>
        <full_name>OID_ASTERISK_INDICATIONS_COUNTRY</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.4.3.1.2']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="53" package="Default">
        <name>OID_ASTERISK_INDICATIONS_DESCRIPTION</name>
        <full_name>OID_ASTERISK_INDICATIONS_DESCRIPTION</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.4.3.1.4']]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="62" package="Default">
        <name>number</name>
        <full_name>number</full_name>
        <docblock line="62">
          <description><![CDATA[Returns the number of indications defined in Asterisk]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Number of indications currently defined in Asterisk.</p>
</blockquote>]]></long-description>
          <tag line="62" name="return" description="The number of indications defined in Asterisk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="75" package="Default">
        <name>defaultZone</name>
        <full_name>defaultZone</full_name>
        <docblock line="75">
          <description><![CDATA[Returns the default indication zone to use.]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Default indication zone to use.</p>
</blockquote>]]></long-description>
          <tag line="75" name="return" description="The default indication zone to use" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="88" package="Default">
        <name>countryCodes</name>
        <full_name>countryCodes</full_name>
        <docblock line="88">
          <description><![CDATA[Returns an array of ISO country codes for the defined indications zones (indexed by SNMP table entry)]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Country for which the indication zone is valid,
  typically this is the ISO 2-letter code of the country.</p>
</blockquote>]]></long-description>
          <tag line="88" name="return" description="An array of ISO country codes for the defined indications zones (indexed by SNMP table entry)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="101" package="Default">
        <name>descriptions</name>
        <full_name>descriptions</full_name>
        <docblock line="101">
          <description><![CDATA[Returns an array of indications zone descriptions (indexed by SNMP table entry)]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Description of the indication zone, usually the full
  name of the country it is valid for.</p>
</blockquote>]]></long-description>
          <tag line="101" name="return" description="An array of indications zone descriptions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="MIBS/Asterisk/Channels.php" hash="3de3a19500d7d5275250b2b5cbf758da" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Asterisk" line="45" package="Default">
      <name>Channels</name>
      <full_name>\OSS_SNMP\MIBS\Asterisk\Channels</full_name>
      <extends>OSS_SNMP\MIB</extends>
      <docblock line="45">
        <description><![CDATA[A class for performing SNMP V2 queries on Asterisk]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="45" name="see" description="\OSS_SNMP\MIBS\Asterisk\https://wiki.asterisk.org/wiki/display/AST/Asterisk+MIB+Definitions" refers="\OSS_SNMP\MIBS\Asterisk\https://wiki.asterisk.org/wiki/display/AST/Asterisk+MIB+Definitions"/>
        <tag line="45" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="45" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="48" package="Default">
        <name>OID_ASTERISK_CHANNELS_ACTIVE</name>
        <full_name>OID_ASTERISK_CHANNELS_ACTIVE</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.5.1.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="50" package="Default">
        <name>OID_ASTERISK_CHANNELS_SUPPORTED</name>
        <full_name>OID_ASTERISK_CHANNELS_SUPPORTED</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.5.3.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="52" package="Default">
        <name>OID_ASTERISK_CHANNEL_TYPE_NAME</name>
        <full_name>OID_ASTERISK_CHANNEL_TYPE_NAME</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.5.4.1.2']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="53" package="Default">
        <name>OID_ASTERISK_CHANNEL_TYPE_DESCRIPTION</name>
        <full_name>OID_ASTERISK_CHANNEL_TYPE_DESCRIPTION</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.5.4.1.3']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="54" package="Default">
        <name>OID_ASTERISK_CHANNEL_TYPE_STATE</name>
        <full_name>OID_ASTERISK_CHANNEL_TYPE_STATE</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.5.4.1.4']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="55" package="Default">
        <name>OID_ASTERISK_CHANNEL_TYPE_INDICATION</name>
        <full_name>OID_ASTERISK_CHANNEL_TYPE_INDICATION</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.5.4.1.5']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="56" package="Default">
        <name>OID_ASTERISK_CHANNEL_TYPE_TRANSFER</name>
        <full_name>OID_ASTERISK_CHANNEL_TYPE_TRANSFER</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.5.4.1.6']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="57" package="Default">
        <name>OID_ASTERISK_CHANNEL_TYPE_CHANNELS</name>
        <full_name>OID_ASTERISK_CHANNEL_TYPE_CHANNELS</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.5.4.1.7']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Asterisk" line="59" package="Default">
        <name>OID_ASTERISK_CHANNELS_BRIDGED</name>
        <full_name>OID_ASTERISK_CHANNELS_BRIDGED</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.5.5.1.0']]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="68" package="Default">
        <name>active</name>
        <full_name>active</full_name>
        <docblock line="68">
          <description><![CDATA[Returns the current number of active channels.]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Current number of active channels.</p>
</blockquote>]]></long-description>
          <tag line="68" name="return" description="The current number of active channels." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="81" package="Default">
        <name>supported</name>
        <full_name>supported</full_name>
        <docblock line="81">
          <description><![CDATA[Returns the number of channel types (technologies) supported.]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Number of channel types (technologies) supported.</p>
</blockquote>]]></long-description>
          <tag line="81" name="return" description="The number of channel types (technologies) supported." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="94" package="Default">
        <name>names</name>
        <full_name>names</full_name>
        <docblock line="94">
          <description><![CDATA[Array of supported channel type names]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Unique name of the technology we are describing.</p>
</blockquote>]]></long-description>
          <tag line="94" name="return" description="Supported channel type names" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="106" package="Default">
        <name>descriptions</name>
        <full_name>descriptions</full_name>
        <docblock line="106">
          <description><![CDATA[Array of supported channel type descriptions]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Description of the channel type (technology).</p>
</blockquote>]]></long-description>
          <tag line="106" name="return" description="Supported channel type descriptions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="118" package="Default">
        <name>deviceStates</name>
        <full_name>deviceStates</full_name>
        <docblock line="118">
          <description><![CDATA[Array of supported channel type device state capability]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Whether the current technology can hold device states.</p>
</blockquote>]]></long-description>
          <tag line="118" name="return" description="Whether the current technology can hold device states." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="130" package="Default">
        <name>progressIndications</name>
        <full_name>progressIndications</full_name>
        <docblock line="130">
          <description><![CDATA[Array of supported channel type progress indication capability]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Whether the current technology supports progress indication.</p>
</blockquote>]]></long-description>
          <tag line="130" name="return" description="Whether the current technology supports progress indication." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="143" package="Default">
        <name>transfers</name>
        <full_name>transfers</full_name>
        <docblock line="143">
          <description><![CDATA[Array of supported channel type transfer capability]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Whether the current technology supports transfers, where
  Asterisk can get out from inbetween two bridged channels.</p>
</blockquote>]]></long-description>
          <tag line="143" name="return" description="Whether the current technology transfers" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="155" package="Default">
        <name>activeCalls</name>
        <full_name>activeCalls</full_name>
        <docblock line="155">
          <description><![CDATA[Array of active calls on supported channels]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Number of active channels using the current technology.</p>
</blockquote>]]></long-description>
          <tag line="155" name="return" description="Active calls on supported channels" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="167" package="Default">
        <name>bridged</name>
        <full_name>bridged</full_name>
        <docblock line="167">
          <description><![CDATA[Number of channels currently in a bridged state.]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Number of channels currently in a bridged state.</p>
</blockquote>]]></long-description>
          <tag line="167" name="return" description="Array of active calls on supported channels" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Asterisk" line="198" package="Default">
        <name>details</name>
        <full_name>details</full_name>
        <docblock line="198">
          <description><![CDATA[Utility function to gather channel details together in an associative array.]]></description>
          <long-description><![CDATA[<p>Returns an array of support channel types. For example:</p>

<pre><code>Array
(
    ....
    [SIP] =&gt; Array
        (
            [name] =&gt; SIP
            [index] =&gt; 5
            [description] =&gt; Session Initiation Protocol (SIP)
            [hasDeviceState] =&gt; 1
            [hasProgressIndications] =&gt; 1
            [canTransfer] =&gt; 1
            [activeCalls] =&gt; 0
        )
    ....
)
</code></pre>

<p>If you chose to index by SNMP table entries, the above element would be indexed with <code>5</code> rather than <code>SIP</code>.</p>]]></long-description>
          <tag line="198" name="param" description="If true, the array is indexed using the SNMP table index rather than the unique channel type name" type="bool" variable="$useIndex">
            <type by_reference="false">bool</type>
          </tag>
          <tag line="198" name="return" description="Channel details as an associative array" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="198">
          <name>$useIndex</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
  </file>
  <file path="MIBS/Entity.php" hash="4800deeb22bbed95c31d981ea5ead6f1" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="Default">
      <name>Entity</name>
      <full_name>\OSS_SNMP\MIBS\Entity</full_name>
      <extends>OSS_SNMP\MIB</extends>
      <docblock line="44">
        <description><![CDATA[A class for performing SNMP V2 queries on generic devices]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="46" package="Default">
        <name>OID_ENTITY_PHYSICAL_CLASS</name>
        <full_name>OID_ENTITY_PHYSICAL_CLASS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.47.1.1.1.1.5']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="47" package="Default">
        <name>OID_ENTITY_PHYSICAL_PARENT_REL_POS</name>
        <full_name>OID_ENTITY_PHYSICAL_PARENT_REL_POS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.47.1.1.1.1.6']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="48" package="Default">
        <name>OID_ENTITY_PHYSICAL_ALIAS</name>
        <full_name>OID_ENTITY_PHYSICAL_ALIAS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.47.1.1.1.1.14']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="57" package="Default">
        <name>PHYSICAL_CLASS_CHASSIS</name>
        <full_name>PHYSICAL_CLASS_CHASSIS</full_name>
        <value><![CDATA[3]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="63" package="Default">
        <name>PHYSICAL_CLASS_CONTAINER</name>
        <full_name>PHYSICAL_CLASS_CONTAINER</full_name>
        <value><![CDATA[5]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="69" package="Default">
        <name>PHYSICAL_CLASS_POWER_SUPPLY</name>
        <full_name>PHYSICAL_CLASS_POWER_SUPPLY</full_name>
        <value><![CDATA[6]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="75" package="Default">
        <name>PHYSICAL_CLASS_FAN</name>
        <full_name>PHYSICAL_CLASS_FAN</full_name>
        <value><![CDATA[7]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="81" package="Default">
        <name>PHYSICAL_CLASS_SENSOR</name>
        <full_name>PHYSICAL_CLASS_SENSOR</full_name>
        <value><![CDATA[8]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="87" package="Default">
        <name>PHYSICAL_CLASS_MODULE</name>
        <full_name>PHYSICAL_CLASS_MODULE</full_name>
        <value><![CDATA[9]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="93" package="Default">
        <name>PHYSICAL_CLASS_PORT</name>
        <full_name>PHYSICAL_CLASS_PORT</full_name>
        <value><![CDATA[10]]></value>
      </constant>
      <property final="false" static="true" visibility="public" line="100" namespace="OSS_SNMP\MIBS" package="Default">
        <name>$ENTITY_PHSYICAL_CLASS</name>
        <default><![CDATA[array(NULL => 'chassis', NULL => 'container', NULL => 'powerSupply', NULL => 'fan', NULL => 'sensor', NULL => 'module', NULL => 'port')]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="119" package="Default">
        <name>physicalClass</name>
        <full_name>physicalClass</full_name>
        <docblock line="119">
          <description><![CDATA[Returns an associate array of entPhysicalClass]]></description>
          <long-description><![CDATA[<p>e.g.  [1005] => 10 / port</p>]]></long-description>
          <tag line="119" name="param" description="If true, return the string representation via self::$ENTITY_PHSYICAL_CLASS" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="119" name="return" description="Associate array of entPhysicalClass" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="119">
          <name>$translate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="138" package="Default">
        <name>physicalParentRelPos</name>
        <full_name>physicalParentRelPos</full_name>
        <docblock line="138">
          <description><![CDATA[Returns an associate array of entPhysicalParentRelPos]]></description>
          <long-description><![CDATA[<p>e.g.  [1005] => 1</p>]]></long-description>
          <tag line="138" name="return" description="Associate array of entPhysicalParentRelPos" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="151" package="Default">
        <name>physicalAlias</name>
        <full_name>physicalAlias</full_name>
        <docblock line="151">
          <description><![CDATA[Returns an associate array of physical aliases]]></description>
          <long-description><![CDATA[<p>e.g.  [1005] => 10001</p>]]></long-description>
          <tag line="151" name="return" description="Associate array of physical aliases" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="166" package="Default">
        <name>relPosToAlias</name>
        <full_name>relPosToAlias</full_name>
        <docblock line="166">
          <description><![CDATA[Utility function for MIBS\Cisco\RSTP::rstpPortRole() to try and translate a port index
into a port ID]]></description>
          <long-description><![CDATA[<p>Makes a number of assumptions including that it has to be of type port, that the ID must be >10000,
etc.</p>]]></long-description>
          <tag line="166" name="return" description="of relative positions to port IDs" type="Array">
            <type by_reference="false">Array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="100" code="50018">No DocBlock was found for property $ENTITY_PHSYICAL_CLASS</error>
    </parse_markers>
  </file>
  <file path="MIBS/Iface.php" hash="15b3fa86bb17e54e4ca9df55d5f4f263" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="Default">
      <name>Iface</name>
      <full_name>\OSS_SNMP\MIBS\Iface</full_name>
      <extends>OSS_SNMP\MIB</extends>
      <docblock line="44">
        <description><![CDATA[A class for performing SNMP V2 queries on generic devices]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="46" package="Default">
        <name>OID_IF_NUMBER</name>
        <full_name>OID_IF_NUMBER</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.1.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="47" package="Default">
        <name>OID_IF_DESCRIPTION</name>
        <full_name>OID_IF_DESCRIPTION</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.2']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="48" package="Default">
        <name>OID_IF_TYPE</name>
        <full_name>OID_IF_TYPE</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.3']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="49" package="Default">
        <name>OID_IF_MTU</name>
        <full_name>OID_IF_MTU</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.4']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="50" package="Default">
        <name>OID_IF_SPEED</name>
        <full_name>OID_IF_SPEED</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.5']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="51" package="Default">
        <name>OID_IF_PHYS_ADDRESS</name>
        <full_name>OID_IF_PHYS_ADDRESS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.6']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="52" package="Default">
        <name>OID_IF_ADMIN_STATUS</name>
        <full_name>OID_IF_ADMIN_STATUS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.7']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="53" package="Default">
        <name>OID_IF_OPER_STATUS</name>
        <full_name>OID_IF_OPER_STATUS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.8']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="54" package="Default">
        <name>OID_IF_LAST_CHANGE</name>
        <full_name>OID_IF_LAST_CHANGE</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.9']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="56" package="Default">
        <name>OID_IF_IN_OCTETS</name>
        <full_name>OID_IF_IN_OCTETS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.10']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="57" package="Default">
        <name>OID_IF_IN_UNICAST_PACKETS</name>
        <full_name>OID_IF_IN_UNICAST_PACKETS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.11']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="58" package="Default">
        <name>OID_IF_IN_NON_UNICAST_PACKETS</name>
        <full_name>OID_IF_IN_NON_UNICAST_PACKETS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.12']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="59" package="Default">
        <name>OID_IF_IN_DISCARDS</name>
        <full_name>OID_IF_IN_DISCARDS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.13']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="60" package="Default">
        <name>OID_IF_IN_ERRORS</name>
        <full_name>OID_IF_IN_ERRORS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.14']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="61" package="Default">
        <name>OID_IF_IN_UNKNOWN_PROTOCOLS</name>
        <full_name>OID_IF_IN_UNKNOWN_PROTOCOLS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.15']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="63" package="Default">
        <name>OID_IF_OUT_OCTETS</name>
        <full_name>OID_IF_OUT_OCTETS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.16']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="64" package="Default">
        <name>OID_IF_OUT_UNICAST_PACKETS</name>
        <full_name>OID_IF_OUT_UNICAST_PACKETS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.17']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="65" package="Default">
        <name>OID_IF_OUT_NON_UNICAST_PACKETS</name>
        <full_name>OID_IF_OUT_NON_UNICAST_PACKETS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.18']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="66" package="Default">
        <name>OID_IF_OUT_DISCARDS</name>
        <full_name>OID_IF_OUT_DISCARDS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.19']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="67" package="Default">
        <name>OID_IF_OUT_ERRORS</name>
        <full_name>OID_IF_OUT_ERRORS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.20']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="68" package="Default">
        <name>OID_IF_OUT_QUEUE_LENGTH</name>
        <full_name>OID_IF_OUT_QUEUE_LENGTH</full_name>
        <value><![CDATA['.1.3.6.1.2.1.2.2.1.21']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="70" package="Default">
        <name>OID_IF_NAME</name>
        <full_name>OID_IF_NAME</full_name>
        <value><![CDATA['.1.3.6.1.2.1.31.1.1.1.1']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="71" package="Default">
        <name>OID_IF_ALIAS</name>
        <full_name>OID_IF_ALIAS</full_name>
        <value><![CDATA['.1.3.6.1.2.1.31.1.1.1.18']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="117" package="Default">
        <name>IF_ADMIN_STATUS_UP</name>
        <full_name>IF_ADMIN_STATUS_UP</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="123" package="Default">
        <name>IF_ADMIN_STATUS_DOWN</name>
        <full_name>IF_ADMIN_STATUS_DOWN</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="129" package="Default">
        <name>IF_ADMIN_STATUS_TESTING</name>
        <full_name>IF_ADMIN_STATUS_TESTING</full_name>
        <value><![CDATA[3]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="452" package="Default">
        <name>IF_OPER_STATUS_UP</name>
        <full_name>IF_OPER_STATUS_UP</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="457" package="Default">
        <name>IF_OPER_STATUS_DOWN</name>
        <full_name>IF_OPER_STATUS_DOWN</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="462" package="Default">
        <name>IF_OPER_STATUS_TESTING</name>
        <full_name>IF_OPER_STATUS_TESTING</full_name>
        <value><![CDATA[3]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="467" package="Default">
        <name>IF_OPER_STATUS_UNKNOWN</name>
        <full_name>IF_OPER_STATUS_UNKNOWN</full_name>
        <value><![CDATA[4]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="472" package="Default">
        <name>IF_OPER_STATUS_DORMANT</name>
        <full_name>IF_OPER_STATUS_DORMANT</full_name>
        <value><![CDATA[5]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="477" package="Default">
        <name>IF_OPER_STATUS_NOT_PRESENT</name>
        <full_name>IF_OPER_STATUS_NOT_PRESENT</full_name>
        <value><![CDATA[6]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="483" package="Default">
        <name>IF_OPER_STATUS_LOWER_LAYER_DOWN</name>
        <full_name>IF_OPER_STATUS_LOWER_LAYER_DOWN</full_name>
        <value><![CDATA[7]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="532" package="Default">
        <name>IF_TYPE_OTHER</name>
        <full_name>IF_TYPE_OTHER</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="538" package="Default">
        <name>IF_TYPE_REGULAR1822</name>
        <full_name>IF_TYPE_REGULAR1822</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="544" package="Default">
        <name>IF_TYPE_HDH1822</name>
        <full_name>IF_TYPE_HDH1822</full_name>
        <value><![CDATA[3]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="550" package="Default">
        <name>IF_TYPE_DDNX25</name>
        <full_name>IF_TYPE_DDNX25</full_name>
        <value><![CDATA[4]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="556" package="Default">
        <name>IF_TYPE_RFC877X25</name>
        <full_name>IF_TYPE_RFC877X25</full_name>
        <value><![CDATA[5]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="562" package="Default">
        <name>IF_TYPE_ETHERNETCSMACD</name>
        <full_name>IF_TYPE_ETHERNETCSMACD</full_name>
        <value><![CDATA[6]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="568" package="Default">
        <name>IF_TYPE_ISO88023CSMACD</name>
        <full_name>IF_TYPE_ISO88023CSMACD</full_name>
        <value><![CDATA[7]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="574" package="Default">
        <name>IF_TYPE_ISO88024TOKENBUS</name>
        <full_name>IF_TYPE_ISO88024TOKENBUS</full_name>
        <value><![CDATA[8]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="580" package="Default">
        <name>IF_TYPE_ISO88025TOKENRING</name>
        <full_name>IF_TYPE_ISO88025TOKENRING</full_name>
        <value><![CDATA[9]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="586" package="Default">
        <name>IF_TYPE_ISO88026MAN</name>
        <full_name>IF_TYPE_ISO88026MAN</full_name>
        <value><![CDATA[10]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="592" package="Default">
        <name>IF_TYPE_STARLAN</name>
        <full_name>IF_TYPE_STARLAN</full_name>
        <value><![CDATA[11]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="598" package="Default">
        <name>IF_TYPE_PROTEON10MBIT</name>
        <full_name>IF_TYPE_PROTEON10MBIT</full_name>
        <value><![CDATA[12]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="604" package="Default">
        <name>IF_TYPE_PROTEON80MBIT</name>
        <full_name>IF_TYPE_PROTEON80MBIT</full_name>
        <value><![CDATA[13]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="610" package="Default">
        <name>IF_TYPE_HYPERCHANNEL</name>
        <full_name>IF_TYPE_HYPERCHANNEL</full_name>
        <value><![CDATA[14]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="616" package="Default">
        <name>IF_TYPE_FDDI</name>
        <full_name>IF_TYPE_FDDI</full_name>
        <value><![CDATA[15]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="622" package="Default">
        <name>IF_TYPE_LAPB</name>
        <full_name>IF_TYPE_LAPB</full_name>
        <value><![CDATA[16]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="628" package="Default">
        <name>IF_TYPE_SDLC</name>
        <full_name>IF_TYPE_SDLC</full_name>
        <value><![CDATA[17]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="634" package="Default">
        <name>IF_TYPE_DS1</name>
        <full_name>IF_TYPE_DS1</full_name>
        <value><![CDATA[18]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="640" package="Default">
        <name>IF_TYPE_E1</name>
        <full_name>IF_TYPE_E1</full_name>
        <value><![CDATA[19]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="646" package="Default">
        <name>IF_TYPE_BASICISDN</name>
        <full_name>IF_TYPE_BASICISDN</full_name>
        <value><![CDATA[20]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="652" package="Default">
        <name>IF_TYPE_PRIMARYISDN</name>
        <full_name>IF_TYPE_PRIMARYISDN</full_name>
        <value><![CDATA[21]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="658" package="Default">
        <name>IF_TYPE_PROPPOINTTOPOINTSERIAL</name>
        <full_name>IF_TYPE_PROPPOINTTOPOINTSERIAL</full_name>
        <value><![CDATA[22]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="664" package="Default">
        <name>IF_TYPE_PPP</name>
        <full_name>IF_TYPE_PPP</full_name>
        <value><![CDATA[23]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="670" package="Default">
        <name>IF_TYPE_SOFTWARELOOPBACK</name>
        <full_name>IF_TYPE_SOFTWARELOOPBACK</full_name>
        <value><![CDATA[24]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="676" package="Default">
        <name>IF_TYPE_EON</name>
        <full_name>IF_TYPE_EON</full_name>
        <value><![CDATA[25]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="682" package="Default">
        <name>IF_TYPE_ETHERNET3MBIT</name>
        <full_name>IF_TYPE_ETHERNET3MBIT</full_name>
        <value><![CDATA[26]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="688" package="Default">
        <name>IF_TYPE_NSIP</name>
        <full_name>IF_TYPE_NSIP</full_name>
        <value><![CDATA[27]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="694" package="Default">
        <name>IF_TYPE_SLIP</name>
        <full_name>IF_TYPE_SLIP</full_name>
        <value><![CDATA[28]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="700" package="Default">
        <name>IF_TYPE_ULTRA</name>
        <full_name>IF_TYPE_ULTRA</full_name>
        <value><![CDATA[29]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="706" package="Default">
        <name>IF_TYPE_DS3</name>
        <full_name>IF_TYPE_DS3</full_name>
        <value><![CDATA[30]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="712" package="Default">
        <name>IF_TYPE_SIP</name>
        <full_name>IF_TYPE_SIP</full_name>
        <value><![CDATA[31]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="718" package="Default">
        <name>IF_TYPE_FRAMERELAY</name>
        <full_name>IF_TYPE_FRAMERELAY</full_name>
        <value><![CDATA[32]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="724" package="Default">
        <name>IF_TYPE_RS232</name>
        <full_name>IF_TYPE_RS232</full_name>
        <value><![CDATA[33]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="730" package="Default">
        <name>IF_TYPE_PARA</name>
        <full_name>IF_TYPE_PARA</full_name>
        <value><![CDATA[34]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="736" package="Default">
        <name>IF_TYPE_ARCNET</name>
        <full_name>IF_TYPE_ARCNET</full_name>
        <value><![CDATA[35]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="742" package="Default">
        <name>IF_TYPE_ARCNETPLUS</name>
        <full_name>IF_TYPE_ARCNETPLUS</full_name>
        <value><![CDATA[36]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="748" package="Default">
        <name>IF_TYPE_ATM</name>
        <full_name>IF_TYPE_ATM</full_name>
        <value><![CDATA[37]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="754" package="Default">
        <name>IF_TYPE_MIOX25</name>
        <full_name>IF_TYPE_MIOX25</full_name>
        <value><![CDATA[38]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="760" package="Default">
        <name>IF_TYPE_SONET</name>
        <full_name>IF_TYPE_SONET</full_name>
        <value><![CDATA[39]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="766" package="Default">
        <name>IF_TYPE_X25PLE</name>
        <full_name>IF_TYPE_X25PLE</full_name>
        <value><![CDATA[40]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="772" package="Default">
        <name>IF_TYPE_ISO88022LLC</name>
        <full_name>IF_TYPE_ISO88022LLC</full_name>
        <value><![CDATA[41]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="778" package="Default">
        <name>IF_TYPE_LOCALTALK</name>
        <full_name>IF_TYPE_LOCALTALK</full_name>
        <value><![CDATA[42]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="784" package="Default">
        <name>IF_TYPE_SMDSDXI</name>
        <full_name>IF_TYPE_SMDSDXI</full_name>
        <value><![CDATA[43]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="790" package="Default">
        <name>IF_TYPE_FRAMERELAYSERVICE</name>
        <full_name>IF_TYPE_FRAMERELAYSERVICE</full_name>
        <value><![CDATA[44]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="796" package="Default">
        <name>IF_TYPE_V35</name>
        <full_name>IF_TYPE_V35</full_name>
        <value><![CDATA[45]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="802" package="Default">
        <name>IF_TYPE_HSSI</name>
        <full_name>IF_TYPE_HSSI</full_name>
        <value><![CDATA[46]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="808" package="Default">
        <name>IF_TYPE_HIPPI</name>
        <full_name>IF_TYPE_HIPPI</full_name>
        <value><![CDATA[47]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="814" package="Default">
        <name>IF_TYPE_MODEM</name>
        <full_name>IF_TYPE_MODEM</full_name>
        <value><![CDATA[48]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="820" package="Default">
        <name>IF_TYPE_AAL5</name>
        <full_name>IF_TYPE_AAL5</full_name>
        <value><![CDATA[49]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="826" package="Default">
        <name>IF_TYPE_SONETPATH</name>
        <full_name>IF_TYPE_SONETPATH</full_name>
        <value><![CDATA[50]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="832" package="Default">
        <name>IF_TYPE_SONETVT</name>
        <full_name>IF_TYPE_SONETVT</full_name>
        <value><![CDATA[51]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="838" package="Default">
        <name>IF_TYPE_SMDSICIP</name>
        <full_name>IF_TYPE_SMDSICIP</full_name>
        <value><![CDATA[52]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="844" package="Default">
        <name>IF_TYPE_PROPVIRTUAL</name>
        <full_name>IF_TYPE_PROPVIRTUAL</full_name>
        <value><![CDATA[53]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="850" package="Default">
        <name>IF_TYPE_PROPMULTIPLEXOR</name>
        <full_name>IF_TYPE_PROPMULTIPLEXOR</full_name>
        <value><![CDATA[54]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="856" package="Default">
        <name>IF_TYPE_IEEE80212</name>
        <full_name>IF_TYPE_IEEE80212</full_name>
        <value><![CDATA[55]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="862" package="Default">
        <name>IF_TYPE_FIBRECHANNEL</name>
        <full_name>IF_TYPE_FIBRECHANNEL</full_name>
        <value><![CDATA[56]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="868" package="Default">
        <name>IF_TYPE_HIPPIINTERFACE</name>
        <full_name>IF_TYPE_HIPPIINTERFACE</full_name>
        <value><![CDATA[57]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="874" package="Default">
        <name>IF_TYPE_FRAMERELAYINTERCONNECT</name>
        <full_name>IF_TYPE_FRAMERELAYINTERCONNECT</full_name>
        <value><![CDATA[58]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="880" package="Default">
        <name>IF_TYPE_AFLANE8023</name>
        <full_name>IF_TYPE_AFLANE8023</full_name>
        <value><![CDATA[59]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="886" package="Default">
        <name>IF_TYPE_AFLANE8025</name>
        <full_name>IF_TYPE_AFLANE8025</full_name>
        <value><![CDATA[60]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="892" package="Default">
        <name>IF_TYPE_CCTEMUL</name>
        <full_name>IF_TYPE_CCTEMUL</full_name>
        <value><![CDATA[61]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="898" package="Default">
        <name>IF_TYPE_FASTETHER</name>
        <full_name>IF_TYPE_FASTETHER</full_name>
        <value><![CDATA[62]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="904" package="Default">
        <name>IF_TYPE_ISDN</name>
        <full_name>IF_TYPE_ISDN</full_name>
        <value><![CDATA[63]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="910" package="Default">
        <name>IF_TYPE_V11</name>
        <full_name>IF_TYPE_V11</full_name>
        <value><![CDATA[64]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="916" package="Default">
        <name>IF_TYPE_V36</name>
        <full_name>IF_TYPE_V36</full_name>
        <value><![CDATA[65]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="922" package="Default">
        <name>IF_TYPE_G703AT64K</name>
        <full_name>IF_TYPE_G703AT64K</full_name>
        <value><![CDATA[66]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="928" package="Default">
        <name>IF_TYPE_G703AT2MB</name>
        <full_name>IF_TYPE_G703AT2MB</full_name>
        <value><![CDATA[67]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="934" package="Default">
        <name>IF_TYPE_QLLC</name>
        <full_name>IF_TYPE_QLLC</full_name>
        <value><![CDATA[68]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="940" package="Default">
        <name>IF_TYPE_FASTETHERFX</name>
        <full_name>IF_TYPE_FASTETHERFX</full_name>
        <value><![CDATA[69]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="946" package="Default">
        <name>IF_TYPE_CHANNEL</name>
        <full_name>IF_TYPE_CHANNEL</full_name>
        <value><![CDATA[70]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="952" package="Default">
        <name>IF_TYPE_IEEE80211</name>
        <full_name>IF_TYPE_IEEE80211</full_name>
        <value><![CDATA[71]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="958" package="Default">
        <name>IF_TYPE_IBM370PARCHAN</name>
        <full_name>IF_TYPE_IBM370PARCHAN</full_name>
        <value><![CDATA[72]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="964" package="Default">
        <name>IF_TYPE_ESCON</name>
        <full_name>IF_TYPE_ESCON</full_name>
        <value><![CDATA[73]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="970" package="Default">
        <name>IF_TYPE_DLSW</name>
        <full_name>IF_TYPE_DLSW</full_name>
        <value><![CDATA[74]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="976" package="Default">
        <name>IF_TYPE_ISDNS</name>
        <full_name>IF_TYPE_ISDNS</full_name>
        <value><![CDATA[75]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="982" package="Default">
        <name>IF_TYPE_ISDNU</name>
        <full_name>IF_TYPE_ISDNU</full_name>
        <value><![CDATA[76]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="988" package="Default">
        <name>IF_TYPE_LAPD</name>
        <full_name>IF_TYPE_LAPD</full_name>
        <value><![CDATA[77]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="994" package="Default">
        <name>IF_TYPE_IPSWITCH</name>
        <full_name>IF_TYPE_IPSWITCH</full_name>
        <value><![CDATA[78]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1000" package="Default">
        <name>IF_TYPE_RSRB</name>
        <full_name>IF_TYPE_RSRB</full_name>
        <value><![CDATA[79]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1006" package="Default">
        <name>IF_TYPE_ATMLOGICAL</name>
        <full_name>IF_TYPE_ATMLOGICAL</full_name>
        <value><![CDATA[80]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1012" package="Default">
        <name>IF_TYPE_DS0</name>
        <full_name>IF_TYPE_DS0</full_name>
        <value><![CDATA[81]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1018" package="Default">
        <name>IF_TYPE_DS0BUNDLE</name>
        <full_name>IF_TYPE_DS0BUNDLE</full_name>
        <value><![CDATA[82]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1024" package="Default">
        <name>IF_TYPE_BSC</name>
        <full_name>IF_TYPE_BSC</full_name>
        <value><![CDATA[83]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1030" package="Default">
        <name>IF_TYPE_ASYNC</name>
        <full_name>IF_TYPE_ASYNC</full_name>
        <value><![CDATA[84]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1036" package="Default">
        <name>IF_TYPE_CNR</name>
        <full_name>IF_TYPE_CNR</full_name>
        <value><![CDATA[85]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1042" package="Default">
        <name>IF_TYPE_ISO88025DTR</name>
        <full_name>IF_TYPE_ISO88025DTR</full_name>
        <value><![CDATA[86]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1048" package="Default">
        <name>IF_TYPE_EPLRS</name>
        <full_name>IF_TYPE_EPLRS</full_name>
        <value><![CDATA[87]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1054" package="Default">
        <name>IF_TYPE_ARAP</name>
        <full_name>IF_TYPE_ARAP</full_name>
        <value><![CDATA[88]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1060" package="Default">
        <name>IF_TYPE_PROPCNLS</name>
        <full_name>IF_TYPE_PROPCNLS</full_name>
        <value><![CDATA[89]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1066" package="Default">
        <name>IF_TYPE_HOSTPAD</name>
        <full_name>IF_TYPE_HOSTPAD</full_name>
        <value><![CDATA[90]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1072" package="Default">
        <name>IF_TYPE_TERMPAD</name>
        <full_name>IF_TYPE_TERMPAD</full_name>
        <value><![CDATA[91]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1078" package="Default">
        <name>IF_TYPE_FRAMERELAYMPI</name>
        <full_name>IF_TYPE_FRAMERELAYMPI</full_name>
        <value><![CDATA[92]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1084" package="Default">
        <name>IF_TYPE_X213</name>
        <full_name>IF_TYPE_X213</full_name>
        <value><![CDATA[93]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1090" package="Default">
        <name>IF_TYPE_ADSL</name>
        <full_name>IF_TYPE_ADSL</full_name>
        <value><![CDATA[94]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1096" package="Default">
        <name>IF_TYPE_RADSL</name>
        <full_name>IF_TYPE_RADSL</full_name>
        <value><![CDATA[95]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1102" package="Default">
        <name>IF_TYPE_SDSL</name>
        <full_name>IF_TYPE_SDSL</full_name>
        <value><![CDATA[96]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1108" package="Default">
        <name>IF_TYPE_VDSL</name>
        <full_name>IF_TYPE_VDSL</full_name>
        <value><![CDATA[97]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1114" package="Default">
        <name>IF_TYPE_ISO88025CRFPINT</name>
        <full_name>IF_TYPE_ISO88025CRFPINT</full_name>
        <value><![CDATA[98]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1120" package="Default">
        <name>IF_TYPE_MYRINET</name>
        <full_name>IF_TYPE_MYRINET</full_name>
        <value><![CDATA[99]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1126" package="Default">
        <name>IF_TYPE_VOICEEM</name>
        <full_name>IF_TYPE_VOICEEM</full_name>
        <value><![CDATA[100]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1132" package="Default">
        <name>IF_TYPE_VOICEFXO</name>
        <full_name>IF_TYPE_VOICEFXO</full_name>
        <value><![CDATA[101]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1138" package="Default">
        <name>IF_TYPE_VOICEFXS</name>
        <full_name>IF_TYPE_VOICEFXS</full_name>
        <value><![CDATA[102]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1144" package="Default">
        <name>IF_TYPE_VOICEENCAP</name>
        <full_name>IF_TYPE_VOICEENCAP</full_name>
        <value><![CDATA[103]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1150" package="Default">
        <name>IF_TYPE_VOICEOVERIP</name>
        <full_name>IF_TYPE_VOICEOVERIP</full_name>
        <value><![CDATA[104]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1156" package="Default">
        <name>IF_TYPE_ATMDXI</name>
        <full_name>IF_TYPE_ATMDXI</full_name>
        <value><![CDATA[105]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1162" package="Default">
        <name>IF_TYPE_ATMFUNI</name>
        <full_name>IF_TYPE_ATMFUNI</full_name>
        <value><![CDATA[106]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1168" package="Default">
        <name>IF_TYPE_ATMIMA</name>
        <full_name>IF_TYPE_ATMIMA</full_name>
        <value><![CDATA[107]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1174" package="Default">
        <name>IF_TYPE_PPPMULTILINKBUNDLE</name>
        <full_name>IF_TYPE_PPPMULTILINKBUNDLE</full_name>
        <value><![CDATA[108]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1180" package="Default">
        <name>IF_TYPE_IPOVERCDLC</name>
        <full_name>IF_TYPE_IPOVERCDLC</full_name>
        <value><![CDATA[109]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1186" package="Default">
        <name>IF_TYPE_IPOVERCLAW</name>
        <full_name>IF_TYPE_IPOVERCLAW</full_name>
        <value><![CDATA[110]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1192" package="Default">
        <name>IF_TYPE_STACKTOSTACK</name>
        <full_name>IF_TYPE_STACKTOSTACK</full_name>
        <value><![CDATA[111]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1198" package="Default">
        <name>IF_TYPE_VIRTUALIPADDRESS</name>
        <full_name>IF_TYPE_VIRTUALIPADDRESS</full_name>
        <value><![CDATA[112]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1204" package="Default">
        <name>IF_TYPE_MPC</name>
        <full_name>IF_TYPE_MPC</full_name>
        <value><![CDATA[113]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1210" package="Default">
        <name>IF_TYPE_IPOVERATM</name>
        <full_name>IF_TYPE_IPOVERATM</full_name>
        <value><![CDATA[114]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1216" package="Default">
        <name>IF_TYPE_ISO88025FIBER</name>
        <full_name>IF_TYPE_ISO88025FIBER</full_name>
        <value><![CDATA[115]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1222" package="Default">
        <name>IF_TYPE_TDLC</name>
        <full_name>IF_TYPE_TDLC</full_name>
        <value><![CDATA[116]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1228" package="Default">
        <name>IF_TYPE_GIGABITETHERNET</name>
        <full_name>IF_TYPE_GIGABITETHERNET</full_name>
        <value><![CDATA[117]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1234" package="Default">
        <name>IF_TYPE_HDLC</name>
        <full_name>IF_TYPE_HDLC</full_name>
        <value><![CDATA[118]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1240" package="Default">
        <name>IF_TYPE_LAPF</name>
        <full_name>IF_TYPE_LAPF</full_name>
        <value><![CDATA[119]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1246" package="Default">
        <name>IF_TYPE_V37</name>
        <full_name>IF_TYPE_V37</full_name>
        <value><![CDATA[120]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1252" package="Default">
        <name>IF_TYPE_X25MLP</name>
        <full_name>IF_TYPE_X25MLP</full_name>
        <value><![CDATA[121]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1258" package="Default">
        <name>IF_TYPE_X25HUNTGROUP</name>
        <full_name>IF_TYPE_X25HUNTGROUP</full_name>
        <value><![CDATA[122]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1264" package="Default">
        <name>IF_TYPE_TRASNPHDLC</name>
        <full_name>IF_TYPE_TRASNPHDLC</full_name>
        <value><![CDATA[123]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1270" package="Default">
        <name>IF_TYPE_INTERLEAVE</name>
        <full_name>IF_TYPE_INTERLEAVE</full_name>
        <value><![CDATA[124]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1276" package="Default">
        <name>IF_TYPE_FAST</name>
        <full_name>IF_TYPE_FAST</full_name>
        <value><![CDATA[125]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1282" package="Default">
        <name>IF_TYPE_IP</name>
        <full_name>IF_TYPE_IP</full_name>
        <value><![CDATA[126]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1288" package="Default">
        <name>IF_TYPE_DOCSCABLEMACLAYER</name>
        <full_name>IF_TYPE_DOCSCABLEMACLAYER</full_name>
        <value><![CDATA[127]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1294" package="Default">
        <name>IF_TYPE_DOCSCABLEDOWNSTREAM</name>
        <full_name>IF_TYPE_DOCSCABLEDOWNSTREAM</full_name>
        <value><![CDATA[128]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1300" package="Default">
        <name>IF_TYPE_DOCSCABLEUPSTREAM</name>
        <full_name>IF_TYPE_DOCSCABLEUPSTREAM</full_name>
        <value><![CDATA[129]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1306" package="Default">
        <name>IF_TYPE_A12MPPSWITCH</name>
        <full_name>IF_TYPE_A12MPPSWITCH</full_name>
        <value><![CDATA[130]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1312" package="Default">
        <name>IF_TYPE_TUNNEL</name>
        <full_name>IF_TYPE_TUNNEL</full_name>
        <value><![CDATA[131]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1318" package="Default">
        <name>IF_TYPE_COFFEE</name>
        <full_name>IF_TYPE_COFFEE</full_name>
        <value><![CDATA[132]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1324" package="Default">
        <name>IF_TYPE_CES</name>
        <full_name>IF_TYPE_CES</full_name>
        <value><![CDATA[133]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1330" package="Default">
        <name>IF_TYPE_ATMSUBINTERFACE</name>
        <full_name>IF_TYPE_ATMSUBINTERFACE</full_name>
        <value><![CDATA[134]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1336" package="Default">
        <name>IF_TYPE_L2VLAN</name>
        <full_name>IF_TYPE_L2VLAN</full_name>
        <value><![CDATA[135]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1342" package="Default">
        <name>IF_TYPE_L3IPVLAN</name>
        <full_name>IF_TYPE_L3IPVLAN</full_name>
        <value><![CDATA[136]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1348" package="Default">
        <name>IF_TYPE_L3IPXVLAN</name>
        <full_name>IF_TYPE_L3IPXVLAN</full_name>
        <value><![CDATA[137]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1354" package="Default">
        <name>IF_TYPE_DIGITALPOWERLINE</name>
        <full_name>IF_TYPE_DIGITALPOWERLINE</full_name>
        <value><![CDATA[138]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1360" package="Default">
        <name>IF_TYPE_MEDIAMAILOVERIP</name>
        <full_name>IF_TYPE_MEDIAMAILOVERIP</full_name>
        <value><![CDATA[139]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1366" package="Default">
        <name>IF_TYPE_DTM</name>
        <full_name>IF_TYPE_DTM</full_name>
        <value><![CDATA[140]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1372" package="Default">
        <name>IF_TYPE_DCN</name>
        <full_name>IF_TYPE_DCN</full_name>
        <value><![CDATA[141]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1378" package="Default">
        <name>IF_TYPE_IPFORWARD</name>
        <full_name>IF_TYPE_IPFORWARD</full_name>
        <value><![CDATA[142]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1384" package="Default">
        <name>IF_TYPE_MSDSL</name>
        <full_name>IF_TYPE_MSDSL</full_name>
        <value><![CDATA[143]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1390" package="Default">
        <name>IF_TYPE_IEEE1394</name>
        <full_name>IF_TYPE_IEEE1394</full_name>
        <value><![CDATA[144]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1396" package="Default">
        <name>IF_TYPE_IF_GSN</name>
        <full_name>IF_TYPE_IF_GSN</full_name>
        <value><![CDATA[145]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1402" package="Default">
        <name>IF_TYPE_DVBRCCMACLAYER</name>
        <full_name>IF_TYPE_DVBRCCMACLAYER</full_name>
        <value><![CDATA[146]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1408" package="Default">
        <name>IF_TYPE_DVBRCCDOWNSTREAM</name>
        <full_name>IF_TYPE_DVBRCCDOWNSTREAM</full_name>
        <value><![CDATA[147]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1414" package="Default">
        <name>IF_TYPE_DVBRCCUPSTREAM</name>
        <full_name>IF_TYPE_DVBRCCUPSTREAM</full_name>
        <value><![CDATA[148]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1420" package="Default">
        <name>IF_TYPE_ATMVIRTUAL</name>
        <full_name>IF_TYPE_ATMVIRTUAL</full_name>
        <value><![CDATA[149]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1426" package="Default">
        <name>IF_TYPE_MPLSTUNNEL</name>
        <full_name>IF_TYPE_MPLSTUNNEL</full_name>
        <value><![CDATA[150]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1432" package="Default">
        <name>IF_TYPE_SRP</name>
        <full_name>IF_TYPE_SRP</full_name>
        <value><![CDATA[151]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1438" package="Default">
        <name>IF_TYPE_VOICEOVERATM</name>
        <full_name>IF_TYPE_VOICEOVERATM</full_name>
        <value><![CDATA[152]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1444" package="Default">
        <name>IF_TYPE_VOICEOVERFRAMERELAY</name>
        <full_name>IF_TYPE_VOICEOVERFRAMERELAY</full_name>
        <value><![CDATA[153]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1450" package="Default">
        <name>IF_TYPE_IDSL</name>
        <full_name>IF_TYPE_IDSL</full_name>
        <value><![CDATA[154]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1456" package="Default">
        <name>IF_TYPE_COMPOSITELINK</name>
        <full_name>IF_TYPE_COMPOSITELINK</full_name>
        <value><![CDATA[155]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1462" package="Default">
        <name>IF_TYPE_SS7SIGLINK</name>
        <full_name>IF_TYPE_SS7SIGLINK</full_name>
        <value><![CDATA[156]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1468" package="Default">
        <name>IF_TYPE_PROPWIRELESSP2P</name>
        <full_name>IF_TYPE_PROPWIRELESSP2P</full_name>
        <value><![CDATA[157]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1474" package="Default">
        <name>IF_TYPE_FRFORWARD</name>
        <full_name>IF_TYPE_FRFORWARD</full_name>
        <value><![CDATA[158]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1480" package="Default">
        <name>IF_TYPE_RFC1483</name>
        <full_name>IF_TYPE_RFC1483</full_name>
        <value><![CDATA[159]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1486" package="Default">
        <name>IF_TYPE_USB</name>
        <full_name>IF_TYPE_USB</full_name>
        <value><![CDATA[160]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1492" package="Default">
        <name>IF_TYPE_IEEE8023ADLAG</name>
        <full_name>IF_TYPE_IEEE8023ADLAG</full_name>
        <value><![CDATA[161]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1498" package="Default">
        <name>IF_TYPE_BGPPOLICYACCOUNTING</name>
        <full_name>IF_TYPE_BGPPOLICYACCOUNTING</full_name>
        <value><![CDATA[162]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1504" package="Default">
        <name>IF_TYPE_FRF16MFRBUNDLE</name>
        <full_name>IF_TYPE_FRF16MFRBUNDLE</full_name>
        <value><![CDATA[163]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1510" package="Default">
        <name>IF_TYPE_H323GATEKEEPER</name>
        <full_name>IF_TYPE_H323GATEKEEPER</full_name>
        <value><![CDATA[164]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1516" package="Default">
        <name>IF_TYPE_H323PROXY</name>
        <full_name>IF_TYPE_H323PROXY</full_name>
        <value><![CDATA[165]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1522" package="Default">
        <name>IF_TYPE_MPLS</name>
        <full_name>IF_TYPE_MPLS</full_name>
        <value><![CDATA[166]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1528" package="Default">
        <name>IF_TYPE_MFSIGLINK</name>
        <full_name>IF_TYPE_MFSIGLINK</full_name>
        <value><![CDATA[167]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1534" package="Default">
        <name>IF_TYPE_HDSL2</name>
        <full_name>IF_TYPE_HDSL2</full_name>
        <value><![CDATA[168]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1540" package="Default">
        <name>IF_TYPE_SHDSL</name>
        <full_name>IF_TYPE_SHDSL</full_name>
        <value><![CDATA[169]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1546" package="Default">
        <name>IF_TYPE_DS1FDL</name>
        <full_name>IF_TYPE_DS1FDL</full_name>
        <value><![CDATA[170]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1552" package="Default">
        <name>IF_TYPE_POS</name>
        <full_name>IF_TYPE_POS</full_name>
        <value><![CDATA[171]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1558" package="Default">
        <name>IF_TYPE_DVBASIIN</name>
        <full_name>IF_TYPE_DVBASIIN</full_name>
        <value><![CDATA[172]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1564" package="Default">
        <name>IF_TYPE_DVBASIOUT</name>
        <full_name>IF_TYPE_DVBASIOUT</full_name>
        <value><![CDATA[173]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1570" package="Default">
        <name>IF_TYPE_PLC</name>
        <full_name>IF_TYPE_PLC</full_name>
        <value><![CDATA[174]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1576" package="Default">
        <name>IF_TYPE_NFAS</name>
        <full_name>IF_TYPE_NFAS</full_name>
        <value><![CDATA[175]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1582" package="Default">
        <name>IF_TYPE_TR008</name>
        <full_name>IF_TYPE_TR008</full_name>
        <value><![CDATA[176]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1588" package="Default">
        <name>IF_TYPE_GR303RDT</name>
        <full_name>IF_TYPE_GR303RDT</full_name>
        <value><![CDATA[177]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1594" package="Default">
        <name>IF_TYPE_GR303IDT</name>
        <full_name>IF_TYPE_GR303IDT</full_name>
        <value><![CDATA[178]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1600" package="Default">
        <name>IF_TYPE_ISUP</name>
        <full_name>IF_TYPE_ISUP</full_name>
        <value><![CDATA[179]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1606" package="Default">
        <name>IF_TYPE_PROPDOCSWIRELESSMACLAYER</name>
        <full_name>IF_TYPE_PROPDOCSWIRELESSMACLAYER</full_name>
        <value><![CDATA[180]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1612" package="Default">
        <name>IF_TYPE_PROPDOCSWIRELESSDOWNSTREAM</name>
        <full_name>IF_TYPE_PROPDOCSWIRELESSDOWNSTREAM</full_name>
        <value><![CDATA[181]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1618" package="Default">
        <name>IF_TYPE_PROPDOCSWIRELESSUPSTREAM</name>
        <full_name>IF_TYPE_PROPDOCSWIRELESSUPSTREAM</full_name>
        <value><![CDATA[182]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1624" package="Default">
        <name>IF_TYPE_HIPERLAN2</name>
        <full_name>IF_TYPE_HIPERLAN2</full_name>
        <value><![CDATA[183]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1630" package="Default">
        <name>IF_TYPE_PROPBWAP2MP</name>
        <full_name>IF_TYPE_PROPBWAP2MP</full_name>
        <value><![CDATA[184]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1636" package="Default">
        <name>IF_TYPE_SONETOVERHEADCHANNEL</name>
        <full_name>IF_TYPE_SONETOVERHEADCHANNEL</full_name>
        <value><![CDATA[185]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1642" package="Default">
        <name>IF_TYPE_DIGITALWRAPPEROVERHEADCHANNEL</name>
        <full_name>IF_TYPE_DIGITALWRAPPEROVERHEADCHANNEL</full_name>
        <value><![CDATA[186]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1648" package="Default">
        <name>IF_TYPE_AAL2</name>
        <full_name>IF_TYPE_AAL2</full_name>
        <value><![CDATA[187]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1654" package="Default">
        <name>IF_TYPE_RADIOMAC</name>
        <full_name>IF_TYPE_RADIOMAC</full_name>
        <value><![CDATA[188]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1660" package="Default">
        <name>IF_TYPE_ATMRADIO</name>
        <full_name>IF_TYPE_ATMRADIO</full_name>
        <value><![CDATA[189]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1666" package="Default">
        <name>IF_TYPE_IMT</name>
        <full_name>IF_TYPE_IMT</full_name>
        <value><![CDATA[190]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1672" package="Default">
        <name>IF_TYPE_MVL</name>
        <full_name>IF_TYPE_MVL</full_name>
        <value><![CDATA[191]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1678" package="Default">
        <name>IF_TYPE_REACHDSL</name>
        <full_name>IF_TYPE_REACHDSL</full_name>
        <value><![CDATA[192]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1684" package="Default">
        <name>IF_TYPE_FRDLCIENDPT</name>
        <full_name>IF_TYPE_FRDLCIENDPT</full_name>
        <value><![CDATA[193]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1690" package="Default">
        <name>IF_TYPE_ATMVCIENDPT</name>
        <full_name>IF_TYPE_ATMVCIENDPT</full_name>
        <value><![CDATA[194]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1696" package="Default">
        <name>IF_TYPE_OPTICALCHANNEL</name>
        <full_name>IF_TYPE_OPTICALCHANNEL</full_name>
        <value><![CDATA[195]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1702" package="Default">
        <name>IF_TYPE_OPTICALTRANSPORT</name>
        <full_name>IF_TYPE_OPTICALTRANSPORT</full_name>
        <value><![CDATA[196]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1708" package="Default">
        <name>IF_TYPE_PROPATM</name>
        <full_name>IF_TYPE_PROPATM</full_name>
        <value><![CDATA[197]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1714" package="Default">
        <name>IF_TYPE_VOICEOVERCABLE</name>
        <full_name>IF_TYPE_VOICEOVERCABLE</full_name>
        <value><![CDATA[198]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1720" package="Default">
        <name>IF_TYPE_INFINIBAND</name>
        <full_name>IF_TYPE_INFINIBAND</full_name>
        <value><![CDATA[199]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1726" package="Default">
        <name>IF_TYPE_TELINK</name>
        <full_name>IF_TYPE_TELINK</full_name>
        <value><![CDATA[200]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1732" package="Default">
        <name>IF_TYPE_Q2931</name>
        <full_name>IF_TYPE_Q2931</full_name>
        <value><![CDATA[201]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1738" package="Default">
        <name>IF_TYPE_VIRTUALTG</name>
        <full_name>IF_TYPE_VIRTUALTG</full_name>
        <value><![CDATA[202]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1744" package="Default">
        <name>IF_TYPE_SIPTG</name>
        <full_name>IF_TYPE_SIPTG</full_name>
        <value><![CDATA[203]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1750" package="Default">
        <name>IF_TYPE_SIPSIG</name>
        <full_name>IF_TYPE_SIPSIG</full_name>
        <value><![CDATA[204]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1756" package="Default">
        <name>IF_TYPE_DOCSCABLEUPSTREAMCHANNEL</name>
        <full_name>IF_TYPE_DOCSCABLEUPSTREAMCHANNEL</full_name>
        <value><![CDATA[205]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1762" package="Default">
        <name>IF_TYPE_ECONET</name>
        <full_name>IF_TYPE_ECONET</full_name>
        <value><![CDATA[206]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1768" package="Default">
        <name>IF_TYPE_PON155</name>
        <full_name>IF_TYPE_PON155</full_name>
        <value><![CDATA[207]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1774" package="Default">
        <name>IF_TYPE_PON622</name>
        <full_name>IF_TYPE_PON622</full_name>
        <value><![CDATA[208]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1780" package="Default">
        <name>IF_TYPE_BRIDGE</name>
        <full_name>IF_TYPE_BRIDGE</full_name>
        <value><![CDATA[209]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1786" package="Default">
        <name>IF_TYPE_LINEGROUP</name>
        <full_name>IF_TYPE_LINEGROUP</full_name>
        <value><![CDATA[210]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1792" package="Default">
        <name>IF_TYPE_VOICEEMFGD</name>
        <full_name>IF_TYPE_VOICEEMFGD</full_name>
        <value><![CDATA[211]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1798" package="Default">
        <name>IF_TYPE_VOICEFGDEANA</name>
        <full_name>IF_TYPE_VOICEFGDEANA</full_name>
        <value><![CDATA[212]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1804" package="Default">
        <name>IF_TYPE_VOICEDID</name>
        <full_name>IF_TYPE_VOICEDID</full_name>
        <value><![CDATA[213]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1810" package="Default">
        <name>IF_TYPE_MPEGTRANSPORT</name>
        <full_name>IF_TYPE_MPEGTRANSPORT</full_name>
        <value><![CDATA[214]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1816" package="Default">
        <name>IF_TYPE_SIXTOFOUR</name>
        <full_name>IF_TYPE_SIXTOFOUR</full_name>
        <value><![CDATA[215]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1822" package="Default">
        <name>IF_TYPE_GTP</name>
        <full_name>IF_TYPE_GTP</full_name>
        <value><![CDATA[216]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1828" package="Default">
        <name>IF_TYPE_PDNETHERLOOP1</name>
        <full_name>IF_TYPE_PDNETHERLOOP1</full_name>
        <value><![CDATA[217]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1834" package="Default">
        <name>IF_TYPE_PDNETHERLOOP2</name>
        <full_name>IF_TYPE_PDNETHERLOOP2</full_name>
        <value><![CDATA[218]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1840" package="Default">
        <name>IF_TYPE_OPTICALCHANNELGROUP</name>
        <full_name>IF_TYPE_OPTICALCHANNELGROUP</full_name>
        <value><![CDATA[219]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1846" package="Default">
        <name>IF_TYPE_HOMEPNA</name>
        <full_name>IF_TYPE_HOMEPNA</full_name>
        <value><![CDATA[220]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1852" package="Default">
        <name>IF_TYPE_GFP</name>
        <full_name>IF_TYPE_GFP</full_name>
        <value><![CDATA[221]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1858" package="Default">
        <name>IF_TYPE_CISCOISLVLAN</name>
        <full_name>IF_TYPE_CISCOISLVLAN</full_name>
        <value><![CDATA[222]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1864" package="Default">
        <name>IF_TYPE_ACTELISMETALOOP</name>
        <full_name>IF_TYPE_ACTELISMETALOOP</full_name>
        <value><![CDATA[223]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1870" package="Default">
        <name>IF_TYPE_FCIPLINK</name>
        <full_name>IF_TYPE_FCIPLINK</full_name>
        <value><![CDATA[224]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1876" package="Default">
        <name>IF_TYPE_RPR</name>
        <full_name>IF_TYPE_RPR</full_name>
        <value><![CDATA[225]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1882" package="Default">
        <name>IF_TYPE_QAM</name>
        <full_name>IF_TYPE_QAM</full_name>
        <value><![CDATA[226]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1888" package="Default">
        <name>IF_TYPE_LMP</name>
        <full_name>IF_TYPE_LMP</full_name>
        <value><![CDATA[227]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1894" package="Default">
        <name>IF_TYPE_CBLVECTASTAR</name>
        <full_name>IF_TYPE_CBLVECTASTAR</full_name>
        <value><![CDATA[228]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1900" package="Default">
        <name>IF_TYPE_DOCSCABLEMCMTSDOWNSTREAM</name>
        <full_name>IF_TYPE_DOCSCABLEMCMTSDOWNSTREAM</full_name>
        <value><![CDATA[229]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1906" package="Default">
        <name>IF_TYPE_ADSL2</name>
        <full_name>IF_TYPE_ADSL2</full_name>
        <value><![CDATA[230]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1912" package="Default">
        <name>IF_TYPE_MACSECCONTROLLEDIF</name>
        <full_name>IF_TYPE_MACSECCONTROLLEDIF</full_name>
        <value><![CDATA[231]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1918" package="Default">
        <name>IF_TYPE_MACSECUNCONTROLLEDIF</name>
        <full_name>IF_TYPE_MACSECUNCONTROLLEDIF</full_name>
        <value><![CDATA[232]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1924" package="Default">
        <name>IF_TYPE_AVICIOPTICALETHER</name>
        <full_name>IF_TYPE_AVICIOPTICALETHER</full_name>
        <value><![CDATA[233]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="1930" package="Default">
        <name>IF_TYPE_ATMBOND</name>
        <full_name>IF_TYPE_ATMBOND</full_name>
        <value><![CDATA[234]]></value>
      </constant>
      <property final="false" static="true" visibility="public" line="137" namespace="OSS_SNMP\MIBS" package="Default">
        <name>$IF_ADMIN_STATES</name>
        <default><![CDATA[array(NULL => 'up', NULL => 'down', NULL => 'testing')]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="491" namespace="OSS_SNMP\MIBS" package="Default">
        <name>$IF_OPER_STATES</name>
        <default><![CDATA[array(NULL => 'up', NULL => 'down', NULL => 'testing', NULL => 'unknown', NULL => 'dormant', NULL => 'notPresent', NULL => 'lowerLayerDown')]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="1938" namespace="OSS_SNMP\MIBS" package="Default">
        <name>$IF_TYPES</name>
        <default><![CDATA[array(NULL => 'other', NULL => 'regular1822', NULL => 'hdh1822', NULL => 'ddnX25', NULL => 'rfc877x25', NULL => 'ethernetCsmacd', NULL => 'iso88023Csmacd', NULL => 'iso88024TokenBus', NULL => 'iso88025TokenRing', NULL => 'iso88026Man', NULL => 'starLan', NULL => 'proteon10Mbit', NULL => 'proteon80Mbit', NULL => 'hyperchannel', NULL => 'fddi', NULL => 'lapb', NULL => 'sdlc', NULL => 'ds1', NULL => 'e1', NULL => 'basicISDN', NULL => 'primaryISDN', NULL => 'propPointToPointSerial', NULL => 'ppp', NULL => 'softwareLoopback', NULL => 'eon', NULL => 'ethernet3Mbit', NULL => 'nsip', NULL => 'slip', NULL => 'ultra', NULL => 'ds3', NULL => 'sip', NULL => 'frameRelay', NULL => 'rs232', NULL => 'para', NULL => 'arcnet', NULL => 'arcnetPlus', NULL => 'atm', NULL => 'miox25', NULL => 'sonet', NULL => 'x25ple', NULL => 'iso88022llc', NULL => 'localTalk', NULL => 'smdsDxi', NULL => 'frameRelayService', NULL => 'v35', NULL => 'hssi', NULL => 'hippi', NULL => 'modem', NULL => 'aal5', NULL => 'sonetPath', NULL => 'sonetVT', NULL => 'smdsIcip', NULL => 'propVirtual', NULL => 'propMultiplexor', NULL => 'ieee80212', NULL => 'fibreChannel', NULL => 'hippiInterface', NULL => 'frameRelayInterconnect', NULL => 'aflane8023', NULL => 'aflane8025', NULL => 'cctEmul', NULL => 'fastEther', NULL => 'isdn', NULL => 'v11', NULL => 'v36', NULL => 'g703at64k', NULL => 'g703at2mb', NULL => 'qllc', NULL => 'fastEtherFX', NULL => 'channel', NULL => 'ieee80211', NULL => 'ibm370parChan', NULL => 'escon', NULL => 'dlsw', NULL => 'isdns', NULL => 'isdnu', NULL => 'lapd', NULL => 'ipSwitch', NULL => 'rsrb', NULL => 'atmLogical', NULL => 'ds0', NULL => 'ds0Bundle', NULL => 'bsc', NULL => 'async', NULL => 'cnr', NULL => 'iso88025Dtr', NULL => 'eplrs', NULL => 'arap', NULL => 'propCnls', NULL => 'hostPad', NULL => 'termPad', NULL => 'frameRelayMPI', NULL => 'x213', NULL => 'adsl', NULL => 'radsl', NULL => 'sdsl', NULL => 'vdsl', NULL => 'iso88025CRFPInt', NULL => 'myrinet', NULL => 'voiceEM', NULL => 'voiceFXO', NULL => 'voiceFXS', NULL => 'voiceEncap', NULL => 'voiceOverIp', NULL => 'atmDxi', NULL => 'atmFuni', NULL => 'atmIma', NULL => 'pppMultilinkBundle', NULL => 'ipOverCdlc', NULL => 'ipOverClaw', NULL => 'stackToStack', NULL => 'virtualIpAddress', NULL => 'mpc', NULL => 'ipOverAtm', NULL => 'iso88025Fiber', NULL => 'tdlc', NULL => 'gigabitEthernet', NULL => 'hdlc', NULL => 'lapf', NULL => 'v37', NULL => 'x25mlp', NULL => 'x25huntGroup', NULL => 'trasnpHdlc', NULL => 'interleave', NULL => 'fast', NULL => 'ip', NULL => 'docsCableMaclayer', NULL => 'docsCableDownstream', NULL => 'docsCableUpstream', NULL => 'a12MppSwitch', NULL => 'tunnel', NULL => 'coffee', NULL => 'ces', NULL => 'atmSubInterface', NULL => 'l2vlan', NULL => 'l3ipvlan', NULL => 'l3ipxvlan', NULL => 'digitalPowerline', NULL => 'mediaMailOverIp', NULL => 'dtm', NULL => 'dcn', NULL => 'ipForward', NULL => 'msdsl', NULL => 'ieee1394', NULL => 'if-gsn', NULL => 'dvbRccMacLayer', NULL => 'dvbRccDownstream', NULL => 'dvbRccUpstream', NULL => 'atmVirtual', NULL => 'mplsTunnel', NULL => 'srp', NULL => 'voiceOverAtm', NULL => 'voiceOverFrameRelay', NULL => 'idsl', NULL => 'compositeLink', NULL => 'ss7SigLink', NULL => 'propWirelessP2P', NULL => 'frForward', NULL => 'rfc1483', NULL => 'usb', NULL => 'ieee8023adLag', NULL => 'bgppolicyaccounting', NULL => 'frf16MfrBundle', NULL => 'h323Gatekeeper', NULL => 'h323Proxy', NULL => 'mpls', NULL => 'mfSigLink', NULL => 'hdsl2', NULL => 'shdsl', NULL => 'ds1FDL', NULL => 'pos', NULL => 'dvbAsiIn', NULL => 'dvbAsiOut', NULL => 'plc', NULL => 'nfas', NULL => 'tr008', NULL => 'gr303RDT', NULL => 'gr303IDT', NULL => 'isup', NULL => 'propDocsWirelessMaclayer', NULL => 'propDocsWirelessDownstream', NULL => 'propDocsWirelessUpstream', NULL => 'hiperlan2', NULL => 'propBWAp2Mp', NULL => 'sonetOverheadChannel', NULL => 'digitalWrapperOverheadChannel', NULL => 'aal2', NULL => 'radioMAC', NULL => 'atmRadio', NULL => 'imt', NULL => 'mvl', NULL => 'reachDSL', NULL => 'frDlciEndPt', NULL => 'atmVciEndPt', NULL => 'opticalChannel', NULL => 'opticalTransport', NULL => 'propAtm', NULL => 'voiceOverCable', NULL => 'infiniband', NULL => 'teLink', NULL => 'q2931', NULL => 'virtualTg', NULL => 'sipTg', NULL => 'sipSig', NULL => 'docsCableUpstreamChannel', NULL => 'econet', NULL => 'pon155', NULL => 'pon622', NULL => 'bridge', NULL => 'linegroup', NULL => 'voiceEMFGD', NULL => 'voiceFGDEANA', NULL => 'voiceDID', NULL => 'mpegTransport', NULL => 'sixToFour', NULL => 'gtp', NULL => 'pdnEtherLoop1', NULL => 'pdnEtherLoop2', NULL => 'opticalChannelGroup', NULL => 'homepna', NULL => 'gfp', NULL => 'ciscoISLvlan', NULL => 'actelisMetaLOOP', NULL => 'fcipLink', NULL => 'rpr', NULL => 'qam', NULL => 'lmp', NULL => 'cblVectaStar', NULL => 'docsCableMCmtsDownstream', NULL => 'adsl2', NULL => 'macSecControlledIF', NULL => 'macSecUncontrolledIF', NULL => 'aviciOpticalEther', NULL => 'atmbond')]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="79" package="Default">
        <name>numberOfInterfaces</name>
        <full_name>numberOfInterfaces</full_name>
        <docblock line="79">
          <description><![CDATA[Get the number of network interfaces (regardless of
their current state) present on this system.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="79" name="return" description="The number of network interfaces on the system" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="90" package="Default">
        <name>mtus</name>
        <full_name>mtus</full_name>
        <docblock line="90">
          <description><![CDATA[Get an array of device MTUs]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="90" name="return" description="An array of device MTUs" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="106" package="Default">
        <name>physAddresses</name>
        <full_name>physAddresses</full_name>
        <docblock line="106">
          <description><![CDATA[Get an array of the interfaces' physical addresses]]></description>
          <long-description><![CDATA[<p>"The interface's address at the protocol layer
immediately `below' the network layer in the
protocol stack.  For interfaces which do not have
such an address (e.g., a serial line), this object
should contain an octet string of zero length."</p>]]></long-description>
          <tag line="106" name="return" description="An array of device physical addresses" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="159" package="Default">
        <name>adminStates</name>
        <full_name>adminStates</full_name>
        <docblock line="159">
          <description><![CDATA[Get an array of device interface admin status (up / down)]]></description>
          <long-description><![CDATA[<p>E.g. the follow SNMP output yields the shown array:</p>

<p>.1.3.6.1.2.1.2.2.1.7.10128 = INTEGER: up(1)
.1.3.6.1.2.1.2.2.1.7.10129 = INTEGER: down(2)
...</p>

<pre><code> [10128] =&gt; 1
 [10129] =&gt; 2
</code></pre>]]></long-description>
          <tag line="159" name="see" description="\IF_ADMIN_STATES" refers="\IF_ADMIN_STATES"/>
          <tag line="159" name="param" description="If true, return the string representation" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="159" name="return" description="An array of interface admin states" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="159">
          <name>$translate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="184" package="Default">
        <name>lastChanges</name>
        <full_name>lastChanges</full_name>
        <docblock line="184">
          <description><![CDATA[Get an array of device interface last change times]]></description>
          <long-description><![CDATA[<p>Value returned is timeticks (one hundreds of a second)</p>

<p>"The value of sysUpTime at the time the interface
entered its current operational state.  If the
current state was entered prior to the last re-
initialization of the local network management
subsystem, then this object contains a zero
value."</p>]]></long-description>
          <tag line="184" name="see" description="\OSS_SNMP\MIBS\System::uptime()" refers="\OSS_SNMP\MIBS\System::uptime()"/>
          <tag line="184" name="return" description="Timeticks (or zero) since last change of the interfaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="197" package="Default">
        <name>inOctets</name>
        <full_name>inOctets</full_name>
        <docblock line="197">
          <description><![CDATA[Get an array of device interface in octets]]></description>
          <long-description><![CDATA[<p>"The total number of octets received on the
interface, including framing characters."</p>]]></long-description>
          <tag line="197" name="return" description="The total number of octets received on interfaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="210" package="Default">
        <name>inUnicastPackets</name>
        <full_name>inUnicastPackets</full_name>
        <docblock line="210">
          <description><![CDATA[Get an array of device interface unicast packets in]]></description>
          <long-description><![CDATA[<p>"The number of subnetwork-unicast packets
delivered to a higher-layer protocol."</p>]]></long-description>
          <tag line="210" name="return" description="The total number of unicast packets received on interfaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="224" package="Default">
        <name>inNonUnicastPackets</name>
        <full_name>inNonUnicastPackets</full_name>
        <docblock line="224">
          <description><![CDATA[Get an array of device interface non-unicast packets in]]></description>
          <long-description><![CDATA[<p>"The number of non-unicast (i.e., subnetwork-
broadcast or subnetwork-multicast) packets
delivered to a higher-layer protocol."</p>]]></long-description>
          <tag line="224" name="return" description="The total number of non-unicast packets received on interfaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="241" package="Default">
        <name>inDiscards</name>
        <full_name>inDiscards</full_name>
        <docblock line="241">
          <description><![CDATA[Get an array of device interface inbound discarded packets]]></description>
          <long-description><![CDATA[<p>"The number of inbound packets which were chosen
to be discarded even though no errors had been
detected to prevent their being deliverable to a
higher-layer protocol.  One possible reason for
discarding such a packet could be to free up
buffer space."</p>]]></long-description>
          <tag line="241" name="return" description="The total number of discarded inbound packets received on interfaces" type="\arrary">
            <type by_reference="false">\arrary</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="255" package="Default">
        <name>inErrors</name>
        <full_name>inErrors</full_name>
        <docblock line="255">
          <description><![CDATA[Get an array of device interface inbound error packets]]></description>
          <long-description><![CDATA[<p>"The number of inbound packets that contained
errors preventing them from being deliverable to a
higher-layer protocol."</p>]]></long-description>
          <tag line="255" name="return" description="The total number of error inbound packets received on interfaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="274" package="Default">
        <name>outOctets</name>
        <full_name>outOctets</full_name>
        <docblock line="274">
          <description><![CDATA[Get an array of device interface out octets]]></description>
          <long-description><![CDATA[<p>"The total number of octets transmitted out of the
interface, including framing characters."</p>]]></long-description>
          <tag line="274" name="return" description="The total number of octets transmitted on interfaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="289" package="Default">
        <name>outUnicastPackets</name>
        <full_name>outUnicastPackets</full_name>
        <docblock line="289">
          <description><![CDATA[Get an array of device interface unicast packets out]]></description>
          <long-description><![CDATA[<p>"The total number of packets that higher-level
protocols requested be transmitted to a
subnetwork-unicast address, including those that
were discarded or not sent."</p>]]></long-description>
          <tag line="289" name="return" description="The total number of unicast packets transmitted on interfaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="305" package="Default">
        <name>outNonUnicastPackets</name>
        <full_name>outNonUnicastPackets</full_name>
        <docblock line="305">
          <description><![CDATA[Get an array of device interface non-unicast packets out]]></description>
          <long-description><![CDATA[<p>"The total number of packets that higher-level
protocols requested be transmitted to a non-
unicast (i.e., a subnetwork-broadcast or
subnetwork-multicast) address, including those
that were discarded or not sent."</p>]]></long-description>
          <tag line="305" name="return" description="The total number of non-unicast packets requested sent interfaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="321" package="Default">
        <name>outDiscards</name>
        <full_name>outDiscards</full_name>
        <docblock line="321">
          <description><![CDATA[Get an array of device interface outbound discarded packets]]></description>
          <long-description><![CDATA[<p>"The number of outbound packets which were chosen
to be discarded even though no errors had been
detected to prevent their being transmitted.  One
possible reason for discarding such a packet could
be to free up buffer space."</p>]]></long-description>
          <tag line="321" name="return" description="The total number of discarded outbound packets" type="\arrary">
            <type by_reference="false">\arrary</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="334" package="Default">
        <name>outErrors</name>
        <full_name>outErrors</full_name>
        <docblock line="334">
          <description><![CDATA[Get an array of device interface outbound error packets]]></description>
          <long-description><![CDATA[<p>"The number of outbound packets that could not be
transmitted because of errors."</p>]]></long-description>
          <tag line="334" name="return" description="The total number of error outbound packets received on interfaces" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="346" package="Default">
        <name>outQueueLength</name>
        <full_name>outQueueLength</full_name>
        <docblock line="346">
          <description><![CDATA[Get an array of interface outbound queue lengths]]></description>
          <long-description><![CDATA[<p>"The length of the output packet queue (in packets)"</p>]]></long-description>
          <tag line="346" name="return" description="The total number of packets in the outbound queues" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="364" package="Default">
        <name>inUnknownProtocols</name>
        <full_name>inUnknownProtocols</full_name>
        <docblock line="364">
          <description><![CDATA[Get an array of packets received on an interface of unknown protocol]]></description>
          <long-description><![CDATA[<p>"The number of packets received via the interface
which were discarded because of an unknown or
unsupported protocol."</p>]]></long-description>
          <tag line="364" name="return" description="The number of packets received on an interface of unknown protocol" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="383" package="Default">
        <name>names</name>
        <full_name>names</full_name>
        <docblock line="383">
          <description><![CDATA[Get an array of device interface names]]></description>
          <long-description><![CDATA[<p>E.g. the following SNMP output yields the shown array:</p>

<p>.1.3.6.1.2.1.31.1.1.1.1.10128 = STRING: Gi1/0/28
.1.3.6.1.2.1.31.1.1.1.1.10129 = STRING: Gi1/0/29
...</p>

<pre><code> [10128] =&gt; "Gi1/0/28"
 [10129] =&gt; "Gi1/0/29"
</code></pre>]]></long-description>
          <tag line="383" name="return" description="An array of interface names" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="402" package="Default">
        <name>aliases</name>
        <full_name>aliases</full_name>
        <docblock line="402">
          <description><![CDATA[Get an array of device interface aliases (e.g. as set by the interface description / port-name parameter)]]></description>
          <long-description><![CDATA[<p>E.g. the followig SNMP output yields the shown array:</p>

<p>.1.3.6.1.2.1.2.2.1.2.18.10128 = STRING: Connection to switch2
.1.3.6.1.2.1.2.2.1.2.18.10129 = STRING: Connection to switch3
...</p>

<pre><code> [10128] =&gt; "Connection to switch2"
 [10129] =&gt; "Connection to switch3"
</code></pre>]]></long-description>
          <tag line="402" name="return" description="An array of interface aliases" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="421" package="Default">
        <name>descriptions</name>
        <full_name>descriptions</full_name>
        <docblock line="421">
          <description><![CDATA[Get an array of device interface descriptions]]></description>
          <long-description><![CDATA[<p>E.g. the following SNMP output yields the shown array:</p>

<p>.1.3.6.1.2.1.31.1.1.1.1.10128 = STRING: GigabitEthernet1/0/28
.1.3.6.1.2.1.31.1.1.1.1.10129 = STRING: GigabitEthernet1/0/29
...</p>

<pre><code> [10128] =&gt; "GigabitEthernet1/0/28"
 [10129] =&gt; "GigabitEthernet1/0/29"
</code></pre>]]></long-description>
          <tag line="421" name="return" description="An array of interface descriptions" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="442" package="Default">
        <name>speeds</name>
        <full_name>speeds</full_name>
        <docblock line="442">
          <description><![CDATA[Get an array of device interface (operating) speeds]]></description>
          <long-description><![CDATA[<p>E.g. the following SNMP output yields the shown array:</p>

<p>.1.3.6.1.2.1.2.2.1.5.10128 = Gauge32: 1000000000
.1.3.6.1.2.1.2.2.1.5.10129 = Gauge32: 100000000
...</p>

<pre><code> [10128] =&gt; 1000000000
 [10129] =&gt; 100000000
</code></pre>

<p>NB: operating speed as opposed to maximum speed</p>]]></long-description>
          <tag line="442" name="return" description="An array of interface operating speeds" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="517" package="Default">
        <name>operationStates</name>
        <full_name>operationStates</full_name>
        <docblock line="517">
          <description><![CDATA[Get an array of device interface operating status (up / down)]]></description>
          <long-description><![CDATA[<p>E.g. the follow SNMP output yields the shown array:</p>

<p>.1.3.6.1.2.1.2.2.1.8.10128 = INTEGER: up(1)
.1.3.6.1.2.1.2.2.1.8.10129 = INTEGER: down(2)
...</p>

<pre><code> [10128] =&gt; 1
 [10129] =&gt; 2
</code></pre>]]></long-description>
          <tag line="517" name="see" description="\IF_OPER_STATES" refers="\IF_OPER_STATES"/>
          <tag line="517" name="param" description="If true, return the string representation" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="517" name="return" description="An array of interface states" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="517">
          <name>$translate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="2182" package="Default">
        <name>types</name>
        <full_name>types</full_name>
        <docblock line="2182">
          <description><![CDATA[Get an array of device interface types]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="2182" name="see" description="\$IF_TYPES" refers="\$IF_TYPES"/>
          <tag line="2182" name="param" description="If true, return the string representation" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="2182" name="return" description="An array of interface types" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="2182">
          <name>$translate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="2200" package="Default">
        <name>bridgeBasePortIfIndexes</name>
        <full_name>bridgeBasePortIfIndexes</full_name>
        <docblock line="2200">
          <description><![CDATA[Returns an associate array of STP port IDs (key) to interface IDs (value)]]></description>
          <long-description><![CDATA[<p>e.g.  [22] => 10122</p>]]></long-description>
          <tag line="2200" name="return" description="Associate array of STP port IDs (key) to interface IDs (value)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="137" code="50018">No DocBlock was found for property $IF_ADMIN_STATES</error>
      <error line="491" code="50018">No DocBlock was found for property $IF_OPER_STATES</error>
      <error line="1938" code="50018">No DocBlock was found for property $IF_TYPES</error>
    </parse_markers>
  </file>
  <file path="MIBS/Asterisk.php" hash="8857835fe715a0e89fa901959977579c" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="45" package="Default">
      <name>Asterisk</name>
      <full_name>\OSS_SNMP\MIBS\Asterisk</full_name>
      <extends>OSS_SNMP\MIB</extends>
      <docblock line="45">
        <description><![CDATA[A class for performing SNMP V2 queries on Asterisk]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="45" name="see" description="\OSS_SNMP\MIBS\https://wiki.asterisk.org/wiki/display/AST/Asterisk+MIB+Definitions" refers="\OSS_SNMP\MIBS\https://wiki.asterisk.org/wiki/display/AST/Asterisk+MIB+Definitions"/>
        <tag line="45" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="45" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="48" package="Default">
        <name>OID_ASTERISK_VERSION_STRING</name>
        <full_name>OID_ASTERISK_VERSION_STRING</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.1.1.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="49" package="Default">
        <name>OID_ASTERISK_VERSION_TAG</name>
        <full_name>OID_ASTERISK_VERSION_TAG</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.1.2.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="51" package="Default">
        <name>OID_ASTERISK_UP_TIME</name>
        <full_name>OID_ASTERISK_UP_TIME</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.2.1.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="52" package="Default">
        <name>OID_ASTERISK_RELOAD_TIME</name>
        <full_name>OID_ASTERISK_RELOAD_TIME</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.2.2.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="53" package="Default">
        <name>OID_ASTERISK_PID</name>
        <full_name>OID_ASTERISK_PID</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.2.3.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="54" package="Default">
        <name>OID_ASTERISK_CONTROL_SOCKET</name>
        <full_name>OID_ASTERISK_CONTROL_SOCKET</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.2.4.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="55" package="Default">
        <name>OID_ASTERISK_CALLS_ACTIVE</name>
        <full_name>OID_ASTERISK_CALLS_ACTIVE</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.2.5.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="56" package="Default">
        <name>OID_ASTERISK_CALLS_PROCESSED</name>
        <full_name>OID_ASTERISK_CALLS_PROCESSED</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.2.6.0']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="58" package="Default">
        <name>OID_ASTERISK_MODULES</name>
        <full_name>OID_ASTERISK_MODULES</full_name>
        <value><![CDATA['.1.3.6.1.4.1.22736.1.3.1.0']]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="68" package="Default">
        <name>version</name>
        <full_name>version</full_name>
        <docblock line="68">
          <description><![CDATA[Returns the version of Asterisk]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Text version string of the version of Asterisk that
  the SNMP Agent was compiled to run against.</p>
</blockquote>]]></long-description>
          <tag line="68" name="return" description="The version of Asterisk" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="82" package="Default">
        <name>tag</name>
        <full_name>tag</full_name>
        <docblock line="82">
          <description><![CDATA[Returns the Subversion (SVN) revision of Asterisk]]></description>
          <long-description><![CDATA[<blockquote>
  <p>SubVersion revision of the version of Asterisk that
  the SNMP Agent was compiled to run against -- this is
  typically 0 for release-versions of Asterisk.</p>
</blockquote>]]></long-description>
          <tag line="82" name="return" description="The SVN revision of Asterisk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="94" package="Default">
        <name>uptime</name>
        <full_name>uptime</full_name>
        <docblock line="94">
          <description><![CDATA[Returns the time ticks (100th sec) since Asterisk was started]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Time ticks since Asterisk was started.</p>
</blockquote>]]></long-description>
          <tag line="94" name="return" description="Time ticks since Asterisk was started" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="106" package="Default">
        <name>reloadTime</name>
        <full_name>reloadTime</full_name>
        <docblock line="106">
          <description><![CDATA[Returns the time ticks (100th sec) since the Asterisk config was reload]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Time ticks since Asterisk was last reloaded.</p>
</blockquote>]]></long-description>
          <tag line="106" name="return" description="Time ticks since the Asterisk config was reload" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="118" package="Default">
        <name>pid</name>
        <full_name>pid</full_name>
        <docblock line="118">
          <description><![CDATA[Returns the process ID of the Asterisk instance]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The process id of the running Asterisk process.</p>
</blockquote>]]></long-description>
          <tag line="118" name="return" description="The process ID of the Asterisk instance" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="130" package="Default">
        <name>controlSocket</name>
        <full_name>controlSocket</full_name>
        <docblock line="130">
          <description><![CDATA[Returns the path for the control socket for giving Asterisk commands]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The control socket for giving Asterisk commands.</p>
</blockquote>]]></long-description>
          <tag line="130" name="return" description="The control socket for giving Asterisk commands" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="142" package="Default">
        <name>callsActive</name>
        <full_name>callsActive</full_name>
        <docblock line="142">
          <description><![CDATA[Returns the number of calls currently active on the Asterisk PBX.]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The number of calls currently active on the Asterisk PBX.</p>
</blockquote>]]></long-description>
          <tag line="142" name="return" description="The number of calls currently active on the Asterisk PBX." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="154" package="Default">
        <name>callsProcessed</name>
        <full_name>callsProcessed</full_name>
        <docblock line="154">
          <description><![CDATA[Returns the total number of calls processed through the Asterisk PBX since last restart.]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The total number of calls processed through the Asterisk PBX since last restart.</p>
</blockquote>]]></long-description>
          <tag line="154" name="return" description="The total number of calls processed through the Asterisk PBX since last restart." type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="166" package="Default">
        <name>modules</name>
        <full_name>modules</full_name>
        <docblock line="166">
          <description><![CDATA[Returns the number of modules currently loaded into Asterisk.]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Number of modules currently loaded into Asterisk.</p>
</blockquote>]]></long-description>
          <tag line="166" name="return" description="The number of modules currently loaded into Asterisk" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="MIBS/LAG.php" hash="d790335bdbcf962d52365e9ebb988cc1" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS" line="44" package="Default">
      <name>LAG</name>
      <full_name>\OSS_SNMP\MIBS\LAG</full_name>
      <extends>OSS_SNMP\MIB</extends>
      <docblock line="44">
        <description><![CDATA[A class for performing SNMP V2 queries on generic devices]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS" line="50" package="Default">
        <name>OID_LAG_PORT_ATTACHED_ID</name>
        <full_name>OID_LAG_PORT_ATTACHED_ID</full_name>
        <value><![CDATA['.1.2.840.10006.300.43.1.2.1.1.13']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS" line="55" package="Default">
        <name>OID_LAG_AGGREGATE_OR_INDIVIDUAL</name>
        <full_name>OID_LAG_AGGREGATE_OR_INDIVIDUAL</full_name>
        <value><![CDATA['.1.2.840.10006.300.43.1.2.1.1.24']]></value>
      </constant>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="63" package="Default">
        <name>isAggregatePorts</name>
        <full_name>isAggregatePorts</full_name>
        <docblock line="63">
          <description><![CDATA[Returns an associate array of port IDs with a boolean value to indicate if it's an aggregate port (true)
or an individual port (false).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="63" name="return" description="Associate array of port IDs with a boolean value to indicate if it's an aggregate port (true) or not" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="75" package="Default">
        <name>portAttachedIds</name>
        <full_name>portAttachedIds</full_name>
        <docblock line="75">
          <description><![CDATA[Returns an associate array of port IDs with the ID of the aggregate port that
they are a member of (else 0 if not a LAG port)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="75" name="return" description="Associate array of port IDs with the ID of the aggregate port that they are a member of" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="92" package="Default">
        <name>getLAGPorts</name>
        <full_name>getLAGPorts</full_name>
        <docblock line="92">
          <description><![CDATA[Gets an associate array of LAG ports with the [id] => name of it's constituent ports]]></description>
          <long-description><![CDATA[<p>E.g.:
   [5048] => Array
       (
           [10111] => GigabitEthernet1/0/11
           [10112] => GigabitEthernet1/0/12
       )</p>]]></long-description>
          <tag line="92" name="return" description="Associate array of LAG ports with the [id] =&gt; name of it's constituent ports" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS" line="109" package="Default">
        <name>findFailedLAGPorts</name>
        <full_name>findFailedLAGPorts</full_name>
        <docblock line="109">
          <description><![CDATA[Utility function to identify configured but unattached LAG ports]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="109" name="return" description="Array of indexed port ids (array index, not value) of configured but unattached LAG ports" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
  </file>
  <file path="MIBS/Cisco.php" hash="e2a7c81034dd847d220c1038cc415575" package="Default">
    <class final="false" abstract="false" namespace="OSS\SNMP\MIBS" line="44" package="Default">
      <name>Cisco</name>
      <full_name>\OSS\SNMP\MIBS\Cisco</full_name>
      <extends>OSS\SNMP\MIB</extends>
      <docblock line="44">
        <description><![CDATA[A class for performing SNMP V2 queries on Cisco devices]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
    </class>
  </file>
  <file path="MIBS/Cisco/RSTP.php" hash="40e68f77a9592c0ede07758f8ef3c58e" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Cisco" line="44" package="Default">
      <name>RSTP</name>
      <full_name>\OSS_SNMP\MIBS\Cisco\RSTP</full_name>
      <extends>OSS_SNMP\MIBS\Cisco</extends>
      <docblock line="44">
        <description><![CDATA[A class for performing SNMP V2 queries on Cisco devices]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="48" package="Default">
        <name>OID_STP_X_RSTP_PORT_ROLE</name>
        <full_name>OID_STP_X_RSTP_PORT_ROLE</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.82.1.12.2.1.3']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="55" package="Default">
        <name>STP_X_RSTP_PORT_ROLE_DISABLED</name>
        <full_name>STP_X_RSTP_PORT_ROLE_DISABLED</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="61" package="Default">
        <name>STP_X_RSTP_PORT_ROLE_ROOT</name>
        <full_name>STP_X_RSTP_PORT_ROLE_ROOT</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="67" package="Default">
        <name>STP_X_RSTP_PORT_ROLE_DESIGNATED</name>
        <full_name>STP_X_RSTP_PORT_ROLE_DESIGNATED</full_name>
        <value><![CDATA[3]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="73" package="Default">
        <name>STP_X_RSTP_PORT_ROLE_ALTERNATE</name>
        <full_name>STP_X_RSTP_PORT_ROLE_ALTERNATE</full_name>
        <value><![CDATA[4]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="79" package="Default">
        <name>STP_X_RSTP_PORT_ROLE_BACKUP</name>
        <full_name>STP_X_RSTP_PORT_ROLE_BACKUP</full_name>
        <value><![CDATA[5]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="85" package="Default">
        <name>STP_X_RSTP_PORT_ROLE_BOUNDARY</name>
        <full_name>STP_X_RSTP_PORT_ROLE_BOUNDARY</full_name>
        <value><![CDATA[6]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="91" package="Default">
        <name>STP_X_RSTP_PORT_ROLE_MASTER</name>
        <full_name>STP_X_RSTP_PORT_ROLE_MASTER</full_name>
        <value><![CDATA[6]]></value>
      </constant>
      <property final="false" static="true" visibility="public" line="99" namespace="OSS_SNMP\MIBS\Cisco" package="Default">
        <name>$STP_X_RSTP_PORT_ROLES</name>
        <default><![CDATA[array(NULL => 'disabled', NULL => 'root', NULL => 'designated', NULL => 'alternate', NULL => 'backUp', NULL => 'boundary', NULL => 'master')]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="113" namespace="OSS_SNMP\MIBS\Cisco" package="Default">
        <name>$STP_X_RSTP_PASSING_PORT_ROLES</name>
        <default><![CDATA[array(NULL => 'root', NULL => 'designated')]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="142" package="Default">
        <name>rstpPortRole</name>
        <full_name>rstpPortRole</full_name>
        <docblock line="142">
          <description><![CDATA[Get the device's RSTP port roles (by given vlan id)]]></description>
          <long-description><![CDATA[<p>Only ports participating in RSTP for the given VLAN id are returned.</p>

<p>This function will also convert STP port IDs to the device proper port IDs.
E.g. sample output:</p>

<p>Array
(
   [10101] => 3
   [10103] => 3
   [10105] => 3
   [5048] => 2
)</p>]]></long-description>
          <tag line="142" name="see" description="\$STP_X_RSTP_PORT_ROLES" refers="\$STP_X_RSTP_PORT_ROLES"/>
          <tag line="142" name="see" description="\STP_X_RSTP_PORT_ROLE_ROOT" refers="\STP_X_RSTP_PORT_ROLE_ROOT"/>
          <tag line="142" name="param" description="The RSTP VLAN ID to query port roles for" type="int" variable="$vid">
            <type by_reference="false">int</type>
          </tag>
          <tag line="142" name="param" description="If true, return the string representation via self::$STP_X_RSTP_PORT_ROLES" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="142" name="return" description="The device's RSTP port roles (by given vlan id)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="142">
          <name>$vid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="142">
          <name>$translate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <markers>
      <todo line="156">Find a better way to translate these?</todo>
    </markers>
    <parse_markers>
      <error line="99" code="50018">No DocBlock was found for property $STP_X_RSTP_PORT_ROLES</error>
      <error line="113" code="50018">No DocBlock was found for property $STP_X_RSTP_PASSING_PORT_ROLES</error>
    </parse_markers>
  </file>
  <file path="MIBS/Cisco/VTP.php" hash="18d6f1a02cd6f5b7a64c246671f67557" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\MIBS\Cisco" line="44" package="Default">
      <name>VTP</name>
      <full_name>\OSS_SNMP\MIBS\Cisco\VTP</full_name>
      <extends>OSS_SNMP\MIBS\Cisco</extends>
      <docblock line="44">
        <description><![CDATA[A class for performing SNMP V2 queries on Cisco devices]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="48" package="Default">
        <name>OID_VTP_VLAN_STATUS</name>
        <full_name>OID_VTP_VLAN_STATUS</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.46.1.3.1.1.2.1']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="49" package="Default">
        <name>OID_VTP_VLAN_TYPE</name>
        <full_name>OID_VTP_VLAN_TYPE</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.46.1.3.1.1.3.1']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="50" package="Default">
        <name>OID_VTP_VLAN_NAME</name>
        <full_name>OID_VTP_VLAN_NAME</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.46.1.3.1.1.4.1']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="53" package="Default">
        <name>OID_STP_X_RSTP_PORT_ROLE</name>
        <full_name>OID_STP_X_RSTP_PORT_ROLE</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.82.1.12.2.1.3']]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="60" package="Default">
        <name>VTP_VLAN_STATE_OPERATIONAL</name>
        <full_name>VTP_VLAN_STATE_OPERATIONAL</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="66" package="Default">
        <name>VTP_VLAN_STATE_SUSPENDED</name>
        <full_name>VTP_VLAN_STATE_SUSPENDED</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="72" package="Default">
        <name>VTP_VLAN_STATE_MTU_TOO_BIG_FOR_DEVICE</name>
        <full_name>VTP_VLAN_STATE_MTU_TOO_BIG_FOR_DEVICE</full_name>
        <value><![CDATA[3]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="78" package="Default">
        <name>VTP_VLAN_STATE_MTU_TOO_BIG_FOR_TRUNK</name>
        <full_name>VTP_VLAN_STATE_MTU_TOO_BIG_FOR_TRUNK</full_name>
        <value><![CDATA[4]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="119" package="Default">
        <name>VTP_VLAN_TYPE_ETHERNET</name>
        <full_name>VTP_VLAN_TYPE_ETHERNET</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="125" package="Default">
        <name>VTP_VLAN_TYPE_FDDI</name>
        <full_name>VTP_VLAN_TYPE_FDDI</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="131" package="Default">
        <name>VTP_VLAN_TYPE_TOKEN_RING</name>
        <full_name>VTP_VLAN_TYPE_TOKEN_RING</full_name>
        <value><![CDATA[3]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="137" package="Default">
        <name>VTP_VLAN_TYPE_FDDI_NET</name>
        <full_name>VTP_VLAN_TYPE_FDDI_NET</full_name>
        <value><![CDATA[4]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="143" package="Default">
        <name>VTP_VLAN_TYPE_TR_NET</name>
        <full_name>VTP_VLAN_TYPE_TR_NET</full_name>
        <value><![CDATA[5]]></value>
      </constant>
      <constant namespace="OSS_SNMP\MIBS\Cisco" line="149" package="Default">
        <name>VTP_VLAN_TYPE_DEPRECATED</name>
        <full_name>VTP_VLAN_TYPE_DEPRECATED</full_name>
        <value><![CDATA[6]]></value>
      </constant>
      <property final="false" static="true" visibility="public" line="86" namespace="OSS_SNMP\MIBS\Cisco" package="Default">
        <name>$VTP_VLAN_STATES</name>
        <default><![CDATA[array(NULL => 'operational', NULL => 'suspended', NULL => 'mtuTooBigForDevice', NULL => 'mtuTooBigForTrunk')]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="157" namespace="OSS_SNMP\MIBS\Cisco" package="Default">
        <name>$VTP_VLAN_TYPES</name>
        <default><![CDATA[array(NULL => 'ethernet', NULL => 'fddi', NULL => 'tokenRing', NULL => 'fddiNet', NULL => 'trNet', NULL => 'deprecated')]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="102" package="Default">
        <name>vlanStates</name>
        <full_name>vlanStates</full_name>
        <docblock line="102">
          <description><![CDATA[Get the device's VTP VLAN States (indexed by VLAN ID)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="see" description="\$VTP_VLAN_STATES" refers="\$VTP_VLAN_STATES"/>
          <tag line="102" name="see" description="\VTP_VLAN_STATE_OPERATIONAL" refers="\VTP_VLAN_STATE_OPERATIONAL"/>
          <tag line="102" name="param" description="If true, return the string representation via self::$VTP_VLAN_TYPES" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="102" name="return" description="The device's VTP VLAN States (indexed by VLAN ID)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$translate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="175" package="Default">
        <name>vlanTypes</name>
        <full_name>vlanTypes</full_name>
        <docblock line="175">
          <description><![CDATA[Get the device's VTP VLAN Types (indexed by VLAN ID)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="175" name="see" description="\$VTP_VLAN_TYPES" refers="\$VTP_VLAN_TYPES"/>
          <tag line="175" name="see" description="\VTP_VLAN_TYPE_ETHERNET" refers="\VTP_VLAN_TYPE_ETHERNET"/>
          <tag line="175" name="param" description="If true, return the string representation via self::$VTP_VLAN_TYPES" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="175" name="return" description="The device's VTP VLAN types (indexed by VLAN ID)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="175">
          <name>$translate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\MIBS\Cisco" line="190" package="Default">
        <name>vlanNames</name>
        <full_name>vlanNames</full_name>
        <docblock line="190">
          <description><![CDATA[Get the device's VTP VLAN names (indexed by VLAN ID)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="190" name="return" description="The device's VTP VLAN names (indexed by VLAN ID)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="86" code="50018">No DocBlock was found for property $VTP_VLAN_STATES</error>
      <error line="157" code="50018">No DocBlock was found for property $VTP_VLAN_TYPES</error>
    </parse_markers>
  </file>
  <file path="MIBS/Cisco/CDP.php" hash="0805abda7a5853d95bd58cb4de27ab8c" package="Default">
    <class final="false" abstract="false" namespace="OSS\SNMP\MIBS\Cisco" line="44" package="Default">
      <name>CDP</name>
      <full_name>\OSS\SNMP\MIBS\Cisco\CDP</full_name>
      <extends>OSS\SNMP\MIBS\Cisco</extends>
      <docblock line="44">
        <description><![CDATA[A class for performing SNMP V2 queries on Cisco devices]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="47" package="Default">
        <name>OID_CDP_INTERFACE_ENABLED</name>
        <full_name>OID_CDP_INTERFACE_ENABLED</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.1.1.1.2']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="48" package="Default">
        <name>OID_CDP_INTERFACE_NAME</name>
        <full_name>OID_CDP_INTERFACE_NAME</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.1.1.1.6']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="50" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_ADDRESS_TYPE</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_ADDRESS_TYPE</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.3']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="51" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_ADDRESS</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_ADDRESS</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.4']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="52" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_VERSION</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_VERSION</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.5']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="53" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_ID</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_ID</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.6']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="54" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_PORT</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_PORT</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.7']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="55" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_PLATFORM</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_PLATFORM</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.8']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="56" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_CAPABILITY</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_CAPABILITY</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.9']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="57" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_VTP_MGMT_DOMAIN</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_VTP_MGMT_DOMAIN</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.10']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="58" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_NATIVE_VLAN</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_NATIVE_VLAN</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.11']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="59" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_DUPLEX</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_DUPLEX</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.12']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="60" package="Default">
        <name>OID_CDP_CACHE_NEIGHBOUR_LAST_CHANGE</name>
        <full_name>OID_CDP_CACHE_NEIGHBOUR_LAST_CHANGE</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.2.1.1.24']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="62" package="Default">
        <name>OID_CDP_GLOBAL_RUN</name>
        <full_name>OID_CDP_GLOBAL_RUN</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.3.1.0']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="63" package="Default">
        <name>OID_CDP_GLOBAL_MESSAGE_INTERVAL</name>
        <full_name>OID_CDP_GLOBAL_MESSAGE_INTERVAL</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.3.2.0']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="64" package="Default">
        <name>OID_CDP_GLOBAL_HOLDTIME</name>
        <full_name>OID_CDP_GLOBAL_HOLDTIME</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.3.3.0']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="65" package="Default">
        <name>OID_CDP_GLOBAL_DEVICE_ID</name>
        <full_name>OID_CDP_GLOBAL_DEVICE_ID</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.3.4.0']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="66" package="Default">
        <name>OID_CDP_GLOBAL_LAST_CHANGE</name>
        <full_name>OID_CDP_GLOBAL_LAST_CHANGE</full_name>
        <value><![CDATA['.1.3.6.1.4.1.9.9.23.1.3.5.0']]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="167" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_ADDRESS_TYPE_IP</name>
        <full_name>CDP_CACHE_NEIGHBOUR_ADDRESS_TYPE_IP</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="305" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_ROUTER</name>
        <full_name>CDP_CACHE_NEIGHBOUR_CAPABILITY_ROUTER</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="311" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_TRANSPARENT_BRIDGE</name>
        <full_name>CDP_CACHE_NEIGHBOUR_CAPABILITY_TRANSPARENT_BRIDGE</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="317" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_SOURCE_ROUTE_BRIDGE</name>
        <full_name>CDP_CACHE_NEIGHBOUR_CAPABILITY_SOURCE_ROUTE_BRIDGE</full_name>
        <value><![CDATA[4]]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="323" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH</name>
        <full_name>CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH</full_name>
        <value><![CDATA[8]]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="329" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_HOST</name>
        <full_name>CDP_CACHE_NEIGHBOUR_CAPABILITY_HOST</full_name>
        <value><![CDATA[16]]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="335" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_IGMP_CAPABLE</name>
        <full_name>CDP_CACHE_NEIGHBOUR_CAPABILITY_IGMP_CAPABLE</full_name>
        <value><![CDATA[32]]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="341" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_CAPABILITY_REPEATER</name>
        <full_name>CDP_CACHE_NEIGHBOUR_CAPABILITY_REPEATER</full_name>
        <value><![CDATA[64]]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="484" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_DUPLEX_UNKNOWN</name>
        <full_name>CDP_CACHE_NEIGHBOUR_DUPLEX_UNKNOWN</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="490" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_DUPLEX_HALF</name>
        <full_name>CDP_CACHE_NEIGHBOUR_DUPLEX_HALF</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <constant namespace="OSS\SNMP\MIBS\Cisco" line="496" package="Default">
        <name>CDP_CACHE_NEIGHBOUR_DUPLEX_FULL</name>
        <full_name>CDP_CACHE_NEIGHBOUR_DUPLEX_FULL</full_name>
        <value><![CDATA[3]]></value>
      </constant>
      <property final="false" static="true" visibility="public" line="175" namespace="OSS\SNMP\MIBS\Cisco" package="Default">
        <name>$CDP_CACHE_NEIGHBOUR_ADDRESS_TYPES</name>
        <default><![CDATA[array(NULL => 'ip')]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="349" namespace="OSS\SNMP\MIBS\Cisco" package="Default">
        <name>$CDP_CACHE_NEIGHBOUR_CAPABILITIES</name>
        <default><![CDATA[array(NULL => 'Router', NULL => 'Transparent Bridge', NULL => 'Source Route Bridge', NULL => 'Switch', NULL => 'Host', NULL => 'IGMP Capable', NULL => 'Repeater')]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="504" namespace="OSS\SNMP\MIBS\Cisco" package="Default">
        <name>$CDP_CACHE_NEIGHBOUR_DUPLEXES</name>
        <default><![CDATA[array(NULL => 'unknown', NULL => 'half-duplex', NULL => 'full-duplex')]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="78" package="Default">
        <name>globalRun</name>
        <full_name>globalRun</full_name>
        <docblock line="78">
          <description><![CDATA[Get the device's global CDP (Cisco Discovery Protocol) run status]]></description>
          <long-description><![CDATA[<blockquote>
  <p>An indication of whether the Cisco Discovery Protocol is currently
  running.  Entries in cdpCacheTable are deleted when CDP is disabled.</p>
</blockquote>]]></long-description>
          <tag line="78" name="return" description="True if enabled globally, else false" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="91" package="Default">
        <name>globalMessageInterval</name>
        <full_name>globalMessageInterval</full_name>
        <docblock line="91">
          <description><![CDATA[Get the interval at which CDP messages are to be generated]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The interval at which CDP messages are to be generated.
  The default value is 60 seconds.</p>
</blockquote>]]></long-description>
          <tag line="91" name="return" description="The interval at which CDP messages are to be generated" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="104" package="Default">
        <name>globalHoldTime</name>
        <full_name>globalHoldTime</full_name>
        <docblock line="104">
          <description><![CDATA[Get the time for the receiving device holds CDP message]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The time for the receiving device holds CDP message.
  The default value is 180 seconds."</p>
</blockquote>]]></long-description>
          <tag line="104" name="return" description="The time for the receiving device holds CDP message" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="118" package="Default">
        <name>globalLastChange</name>
        <full_name>globalLastChange</full_name>
        <docblock line="118">
          <description><![CDATA[The time when the cache table was last changed]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Indicates the time when the cache table was last changed. It
  is the most recent time at which any row was last created,
  modified or deleted.</p>
</blockquote>]]></long-description>
          <tag line="118" name="return" description="The time (timeticks) when the cache table was last changed" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="128" package="Default">
        <name>id</name>
        <full_name>id</full_name>
        <docblock line="128">
          <description><![CDATA[Get the device's CDP (Cisco Discovery Protocol) ID]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="128" name="return" description="The device's CDP (Cisco Discovery Protocol) ID" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="144" package="Default">
        <name>interfaceEnabled</name>
        <full_name>interfaceEnabled</full_name>
        <docblock line="144">
          <description><![CDATA[Get the device's interfaces CDP enabled status]]></description>
          <long-description><![CDATA[<p>Applies the TruthValue post processor to turn
SNMP values into true / false.</p>]]></long-description>
          <tag line="144" name="see" description="\OSS\SNMP::ppTruthValue()" refers="\OSS\SNMP::ppTruthValue()"/>
          <tag line="144" name="return" description="The device's interfaces CDP enabled status' (as boolean true / false)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="156" package="Default">
        <name>interfaceNames</name>
        <full_name>interfaceNames</full_name>
        <docblock line="156">
          <description><![CDATA[Get the device's interface names as seen in CDP]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The name of the local interface as advertised by CDP in the Port-ID TLV</p>
</blockquote>]]></long-description>
          <tag line="156" name="return" description="The device's interface names as seen in CDP" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="187" package="Default">
        <name>neighbourAddressTypes</name>
        <full_name>neighbourAddressTypes</full_name>
        <docblock line="187">
          <description><![CDATA[Get the CDP neighbours' address type indexed by the current device's port ID]]></description>
          <long-description><![CDATA[<blockquote>
  <p>An indication of the type of address contained in the corresponding instance of cdpCacheAddress</p>
</blockquote>]]></long-description>
          <tag line="187" name="param" description="If true, return the string representation via self::$VTP_VLAN_TYPES" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="187" name="return" description="The CDP neighbours' address type indexed by the current device's port ID" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="187">
          <name>$translate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="213" package="Default">
        <name>neighbourAddresses</name>
        <full_name>neighbourAddresses</full_name>
        <docblock line="213">
          <description><![CDATA[Get the device's CDP neighbour addresses indexed by the current device's port ID]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The (first) network-layer address of the device
  as reported in the Address TLV of the most recently received
  CDP message.  For example, if the corresponding instance of
  cacheAddressType had the value 'ip(1)', then this object
  would be an IPv4-address.  If the neighbor device is
  SNMP-manageable, it is supposed to generate its CDP messages
  such that this address is one at which it will receive SNMP
  messages. Use cdpCtAddressTable to extract the remaining
  addresses from the Address TLV received most recently."</p>
</blockquote>]]></long-description>
          <tag line="213" name="return" description="The device's CDP neighbour addresses indexed by the current device's port ID" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="235" package="Default">
        <name>neighbourVersions</name>
        <full_name>neighbourVersions</full_name>
        <docblock line="235">
          <description><![CDATA[Get the device's CDP neighbour version indexed by the current device's port ID]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The Version string as reported in the most recent CDP
  message.  The zero-length string indicates no Version
  field (TLV) was reported in the most recent CDP message."</p>
</blockquote>]]></long-description>
          <tag line="235" name="return" description="The device's CDP neighbour version indexed by the current device's port ID" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="250" package="Default">
        <name>neighbourId</name>
        <full_name>neighbourId</full_name>
        <docblock line="250">
          <description><![CDATA[Get the device's CDP neighbours (by their CDP ID) indexed by the current device's port ID]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The Device-ID string as reported in the most recent CDP
  message.  The zero-length string indicates no Device-ID
  field (TLV) was reported in the most recent CDP message."</p>
</blockquote>]]></long-description>
          <tag line="250" name="return" description="The device's CDP neighbours (by their CDP ID) indexed by the current device's port ID" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="280" package="Default">
        <name>neighbourPort</name>
        <full_name>neighbourPort</full_name>
        <docblock line="280">
          <description><![CDATA[Get the device's CDP neighbours connected port description indexed by the current device's port ID]]></description>
          <long-description><![CDATA[<p>E.g. a sample call may return:</p>

<pre><code>Array
(
    [10101] =&gt; GigabitEthernet0/1
    [10102] =&gt; FastEthernet0/2
    [10103] =&gt; GigabitEthernet1/0/24
    [10105] =&gt; GigabitEthernet1/0/2
)
</code></pre>

<p>meaning, for example, that our local port with ID <code>10101</code> is connected to port <code>GigabitEthernet0/1</code> on the neighbour
connected to that local port. You can discover the neighbour ID via <code>neighbourId()</code>.</p>

<blockquote>
  <p>The Port-ID string as reported in the most recent CDP
  message.  This will typically be the value of the ifName
  object (e.g., 'Ethernet0').  The zero-length string
  indicates no Port-ID field (TLV) was reported in the
  most recent CDP message.</p>
</blockquote>]]></long-description>
          <tag line="280" name="see" description="\OSS\SNMP\MIBS\Cisco\CDP::neighbourId()" refers="\OSS\SNMP\MIBS\Cisco\CDP::neighbourId()"/>
          <tag line="280" name="return" description="The device's CDP neighbours connected port *description* indexed by the current device's port ID" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="294" package="Default">
        <name>neighbourPlatforms</name>
        <full_name>neighbourPlatforms</full_name>
        <docblock line="294">
          <description><![CDATA[Get the device's CDP neighbour platforms indexed by the current device's port ID]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The Device's Hardware Platform as reported in the most recent CDP
  message. The zero-length string indicates that no Platform field
  (TLV) was reported in the most recent CDP message.</p>
</blockquote>]]></long-description>
          <tag line="294" name="return" description="The device's CDP neighbour platforms indexed by the current device's port ID" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="374" package="Default">
        <name>neighbourCapability</name>
        <full_name>neighbourCapability</full_name>
        <docblock line="374">
          <description><![CDATA[Get the device's CDP neighbour capabilities (as a decimal integer) indexed by the current device's port ID]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The Device's Functional Capabilities as reported in the most
  recent CDP message.  For latest set of specific values, see
  the latest version of the CDP specification. The zero-length
  string indicates no Capabilities field (TLV) was reported in
  the most recent CDP message."</p>
</blockquote>]]></long-description>
          <tag line="374" name="see" description="\REFERENCE" refers="\REFERENCE"/>
          <tag line="374" name="see" description="\http://www.cisco.com/univercd/cc/td/doc/product/lan/trsrb/frames.htm#xtocid12" refers="\http://www.cisco.com/univercd/cc/td/doc/product/lan/trsrb/frames.htm#xtocid12"/>
          <tag line="374" name="see" description="\http://wiki.wireshark.org/CDP" refers="\http://wiki.wireshark.org/CDP"/>
          <tag line="374" name="return" description="The device's CDP neighbour capabilities (as a decimal integer) indexed by the current device's port ID" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="396" package="Default">
        <name>neighbourHasCapability</name>
        <full_name>neighbourHasCapability</full_name>
        <docblock line="396">
          <description><![CDATA[Query if a given neighbour (by connected port ID) has the given capability]]></description>
          <long-description><![CDATA[<p>Example:</p>

<pre><code>if( $host-&gt;useCisco_CDP()-&gt;neighbourHasCapability( $portId, \OSS\SNMP\MIBS\Cisco\CDP::CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH )
     echo "Host is a switch!!";
</code></pre>]]></long-description>
          <tag line="396" name="param" description="The CDP neighbour by connected local port ID" type="int" variable="$portId">
            <type by_reference="false">int</type>
          </tag>
          <tag line="396" name="param" description="The capability to query for (defined by self::CDP_CACHE_NEIGHBOUR_CAPABILITY_XXX constants)" type="int" variable="$capability">
            <type by_reference="false">int</type>
          </tag>
          <tag line="396" name="return" description="True if the neighbour has the given capability" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="396">
          <name>$portId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="396">
          <name>$capability</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="425" package="Default">
        <name>neighbourCapabilities</name>
        <full_name>neighbourCapabilities</full_name>
        <docblock line="425">
          <description><![CDATA[Get an array of individual capabilities of a given neighbour (by connected port ID)]]></description>
          <long-description><![CDATA[<p>Example:</p>

<pre><code>print_r( $host-&gt;useCisco_CDP()-&gt;neighbourCapabilities( 10111 ) )

    [0] =&gt; 8         // self::CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH
    [1] =&gt; 32        // self::CDP_CACHE_NEIGHBOUR_CAPABILITY_IGMP_CAPABLE

print_r( $host-&gt;useCisco_CDP()-&gt;neighbourCapabilities( 10111, true ) )

    [0] =&gt; "Switch"              // self::CDP_CACHE_NEIGHBOUR_CAPABILITY_SWITCH
    [1] =&gt; "IGMP Capable"        // self::CDP_CACHE_NEIGHBOUR_CAPABILITY_IGMP_CAPABLE
</code></pre>]]></long-description>
          <tag line="425" name="param" description="The CDP neighbour by connected local port ID" type="int" variable="$portId">
            <type by_reference="false">int</type>
          </tag>
          <tag line="425" name="param" description="Set to true to return descriptions rather than integers" type="int" variable="$translate">
            <type by_reference="false">int</type>
          </tag>
          <tag line="425" name="return" description="Individual capabilities of a given neighbour" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="425">
          <name>$portId</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="425">
          <name>$translate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="456" package="Default">
        <name>neighbourVTPMgmtDomain</name>
        <full_name>neighbourVTPMgmtDomain</full_name>
        <docblock line="456">
          <description><![CDATA[Get the device's CDP neighbours' VTP management domain indexed by the current device's port ID]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The VTP Management Domain for the remote device's interface,
  as reported in the most recently received CDP message. This
  object is not instantiated if no VTP Management Domain field
  (TLV) was reported in the most recently received CDP message.</p>
</blockquote>]]></long-description>
          <tag line="456" name="see" description="\REFERENCE" refers="\REFERENCE"/>
          <tag line="456" name="return" description="The device's CDP neighbours' VTP management domain indexed by the current device's port ID" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="472" package="Default">
        <name>neighbourNativeVLAN</name>
        <full_name>neighbourNativeVLAN</full_name>
        <docblock line="472">
          <description><![CDATA[Get the remote device's interface's native VLAN (indexed by local portId)]]></description>
          <long-description><![CDATA[<blockquote>
  <p>The remote device's interface's native VLAN, as reported in the
  most recent CDP message.  The value 0 indicates
  no native VLAN field (TLV) was reported in the most
  recent CDP message.</p>
</blockquote>]]></long-description>
          <tag line="472" name="return" description="The remote device's interface's native VLAN (indexed by local portId)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="522" package="Default">
        <name>neighbourDuplexMode</name>
        <full_name>neighbourDuplexMode</full_name>
        <docblock line="522">
          <description><![CDATA[Get the remote device's interface's duplex mode (indexed by local portId)]]></description>
          <long-description><![CDATA[<blockquote>
  <p>he remote device's interface's duplex mode, as reported in the
  most recent CDP message.  The value unknown(1) indicates
  no duplex mode field (TLV) was reported in the most
  recent CDP message."</p>
</blockquote>]]></long-description>
          <tag line="522" name="param" description="If true, return the string representation via self::$VTP_VLAN_TYPES" type="boolean" variable="$translate">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="522" name="return" description="The remote device's interface's duplex mode (indexed by local portId)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="522">
          <name>$translate</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="544" package="Default">
        <name>neighbourLastChange</name>
        <full_name>neighbourLastChange</full_name>
        <docblock line="544">
          <description><![CDATA[Get the remote device's last change time (indexed by local portId)]]></description>
          <long-description><![CDATA[<blockquote>
  <p>Indicates the time when this cache entry was last changed.
  This object is initialised to the current time when the entry
  gets created and updated to the current time whenever the value
  of any (other) object instance in the corresponding row is
  modified."</p>
</blockquote>]]></long-description>
          <tag line="544" name="return" description="The remote device's last change time(indexed by local portId)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="608" package="Default">
        <name>neighbours</name>
        <full_name>neighbours</full_name>
        <docblock line="608">
          <description><![CDATA[CDP utility function to get all CDP neighbours and their connected ports.]]></description>
          <long-description><![CDATA[<p>Returns an array of neighbours indexed by the neighbour CDP ID with a lot of details.</p>

<p>For example, here's a sample return for a switch with two neighbours where one neighbour
is connected with a LAG / PortChannel and <code>$inverse</code> was set to true.</p>

<pre><code>array(2) {
    ["cr-sw07.example.ie"] =&gt; array(1) {
        [0] =&gt; array(7) {
            ["localPortId"] =&gt; int(10103)
            ["localPortName"] =&gt; string(7) "Gi1/0/3"
            ["localPort"] =&gt; string(20) "GigabitEthernet1/0/3"
            ["isLAG"] =&gt; bool(false)
            ["remotePort"] =&gt; string(21) "GigabitEthernet1/0/24"
            ["remotePortId"] =&gt; int(10124)
            ["remotePortName"] =&gt; string(8) "Gi1/0/24"
        }
    }
    ["cr-sw01.example.ie"] =&gt; array(2) {
        [0] =&gt; array(11) {
            ["localPortId"] =&gt; int(10111)
            ["localPortName"] =&gt; string(8) "Gi1/0/11"
                ["localPort"] =&gt; string(21) "GigabitEthernet1/0/11"
            ["isLAG"] =&gt; bool(true)
            ["lagPortId"] =&gt; int(5048)
            ["lagPortName"] =&gt; string(4) "Po48"
            ["remotePort"] =&gt; string(21) "GigabitEthernet1/0/11"
            ["remotePortId"] =&gt; int(10111)
            ["remotePortName"] =&gt; string(8) "Gi1/0/11"
            ["remoteLagPortId"] =&gt; int(5048)
            ["remoteLagPortName"] =&gt; string(4) "Po48"
        }
        [1] =&gt; array(11) {
            ["localPortId"] =&gt; int(10112)
            ["localPortName"] =&gt; string(8) "Gi1/0/12"
            ["localPort"] =&gt; string(21) "GigabitEthernet1/0/12"
            ["isLAG"] =&gt; bool(true)
            ["lagPortId"] =&gt; int(5048)
            ["lagPortName"] =&gt; string(4) "Po48"
            ["remotePort"] =&gt; string(21) "GigabitEthernet1/0/12"
            ["remotePortId"] =&gt; int(10112)
            ["remotePortName"] =&gt; string(8) "Gi1/0/12"
            ["remoteLagPortId"] =&gt; int(5048)
            ["remoteLagPortName"] =&gt; string(4) "Po48"
        }
    }
</code></pre>]]></long-description>
          <tag line="608" name="see" description="\neighbourId()" refers="\neighbourId()"/>
          <tag line="608" name="see" description="\OSS\SNMP\MIBS\Interface::descriptions()" refers="\OSS\SNMP\MIBS\Interface::descriptions()"/>
          <tag line="608" name="see" description="\neighbourPort()" refers="\neighbourPort()"/>
          <tag line="608" name="param" description="If true, all remoteXXX params will be discovered (only remotePort is returned otherwise)" type="boolean" variable="$inverse">
            <type by_reference="false">boolean</type>
          </tag>
          <tag line="608" name="param" description="If using $inverse, pass an array of CDP IDs of neighbours that should not be 'inverse' discovered." type="array" variable="$skipHostIds">
            <type by_reference="false">array</type>
          </tag>
          <tag line="608" name="return" description="CDP neighbours and their connected ports" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="608">
          <name>$inverse</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="608">
          <name>$skipHostIds</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="703" package="Default">
        <name>crawl</name>
        <full_name>crawl</full_name>
        <docblock line="703">
          <description><![CDATA[Recursivily crawls all CDP neighbours to build up a flat array of all devices
indexed by the CDP device id.]]></description>
          <long-description><![CDATA[<p>Array form is same as that returned by neighbours()</p>]]></long-description>
          <tag line="703" name="see" description="\neighbours()" refers="\neighbours()"/>
          <tag line="703" name="param" description="Unless you're doing something funky, just pass an empty array. This is where the result will be found." type="array" variable="$devices">
            <type by_reference="false">array</type>
          </tag>
          <tag line="703" name="param" description="CDP device ID of next host to crawl. On first pass, set to null - used internally when recursing" type="string" variable="$device">
            <type by_reference="false">string</type>
          </tag>
          <tag line="703" name="param" description="An array of CDP device IDs to *ignore*. I.e. to not include in recursive crawling" type="array" variable="$ignore">
            <type by_reference="false">array</type>
          </tag>
          <tag line="703" name="return" description="The resultant array of all crawled devices (same as that passed in the @param $devices parameter)" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="703">
          <name>$devices</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
        <argument line="703">
          <name>$device</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
        <argument line="703">
          <name>$ignore</name>
          <default><![CDATA[array()]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="778" package="Default">
        <name>linkTopology</name>
        <full_name>linkTopology</full_name>
        <docblock line="778">
          <description><![CDATA[Find the layer 2 topology as an array with no link mentioned more than once.]]></description>
          <long-description><![CDATA[<p>Huh? This function:</p>

<ul>
<li>takes the result of crawl() (or calls crawl()) to get the CDP topology;</li>
<li>foreach device, builds an array of device to device links;</li>
<li>SO LONG as that link has already not been accounted for in the other direction.</li>
</ul>

<p>I.e. if a link is found A -> B, then the same B -> A link will not be included.</p>

<p>The primary differences to the return value of this and crawl() are:</p>

<ul>
<li>links only appear once (unidirectional) rather than twice (bidirectional)</li>
<li><p>the links are indexed by the localPortName rather than an integer index:</p>

<p>[cr-sw04.degkcp.example.ie] => Array
(
     [cd-sw02.degkcp.example.ie] => Array
     (
         [GigabitEthernet1/0/3] => Array
         (
             [remotePort] => FastEthernet0/1
             [isLAG]      => false
             ........
     )
)</p></li>
</ul>

<p>All port information is copied over from the supplied / called <code>crawl()</code> array</p>]]></long-description>
          <tag line="778" name="see" description="\crawl()" refers="\crawl()"/>
          <tag line="778" name="param" description="The result of crawl() (if null, this function performs a crawl())" type="array" variable="$devices">
            <type by_reference="false">array</type>
          </tag>
          <tag line="778" name="return" description="L2 topology as described above." type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="778">
          <name>$devices</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="876" package="Default">
        <name>collapseLAGs</name>
        <full_name>collapseLAGs</full_name>
        <docblock line="876">
          <description><![CDATA[Utility function to process the output from neighbours() and remove individual trunk ports leaving only
single LAG links.]]></description>
          <long-description><![CDATA[<p>For example, here's a sample return for a switch with a neighbour
connected with a LAG / PortChannel:</p>

<pre><code>array(2) {
["cr-sw01.example.ie"] =&gt; array(2) {
    [0] =&gt; array(11) {
        ["localPortId"] =&gt; int(10111)
        ["localPortName"] =&gt; string(8) "Gi1/0/11"
        ["localPort"] =&gt; string(21) "GigabitEthernet1/0/11"
        ["isLAG"] =&gt; bool(true)
        ["lagPortId"] =&gt; int(5048)
        ["lagPortName"] =&gt; string(4) "Po48"
        ["remotePort"] =&gt; string(21) "GigabitEthernet1/0/11"
        ["remotePortId"] =&gt; int(10111)
        ["remotePortName"] =&gt; string(8) "Gi1/0/11"
        ["remoteLagPortId"] =&gt; int(5048)
        ["remoteLagPortName"] =&gt; string(4) "Po48"
    }
    [1] =&gt; array(11) {
        ["localPortId"] =&gt; int(10112)
        ["localPortName"] =&gt; string(8) "Gi1/0/12"
        ["localPort"] =&gt; string(21) "GigabitEthernet1/0/12"
        ["isLAG"] =&gt; bool(true)
        ["lagPortId"] =&gt; int(5048)
        ["lagPortName"] =&gt; string(4) "Po48"
        ["remotePort"] =&gt; string(21) "GigabitEthernet1/0/12"
        ["remotePortId"] =&gt; int(10112)
        ["remotePortName"] =&gt; string(8) "Gi1/0/12"
        ["remoteLagPortId"] =&gt; int(5048)
        ["remoteLagPortName"] =&gt; string(4) "Po48"
    }
}
...
}
</code></pre>

<p>The result of this function would be:</p>

<pre><code>array(2) {
["cr-sw01.example.ie"] =&gt; array(1) {
    [0] =&gt; array(11) {
        ["localPortId"] =&gt; int(5048)
        ["localPortName"] =&gt; string(8) "Po48"
        ["localPort"] =&gt; string(21) "Po48"
        ["isLAG"] =&gt; bool(true)
        ["lagPortId"] =&gt; int(5048)
        ["lagPortName"] =&gt; string(4) "Po48"
        ["remotePort"] =&gt; string(21) "Po48"
        ["remotePortId"] =&gt; int(5048)
        ["remotePortName"] =&gt; string(8) "Po48"
        ["remoteLagPortId"] =&gt; int(5048)
        ["remoteLagPortName"] =&gt; string(4) "Po48"
    }
}
...
}
</code></pre>]]></long-description>
          <tag line="876" name="see" description="\neighbours()" refers="\neighbours()"/>
          <tag line="876" name="param" description="The result of a call to neighbours()" type="array" variable="$neighbours">
            <type by_reference="false">array</type>
          </tag>
          <tag line="876" name="return" description="Processed CDP neighbours with LAG ports collapsed" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="876">
          <name>$neighbours</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS\SNMP\MIBS\Cisco" line="914" package="Default">
        <name>collapseDevicesLAGs</name>
        <full_name>collapseDevicesLAGs</full_name>
        <docblock line="914">
          <description><![CDATA[An extension of `collapseLAGs()` to work with `crawl()` and `linkTopology()`.]]></description>
          <long-description><![CDATA[<p>Rather than taking the input from <code>neighbours()</code>, it takes input from <code>crawl()</code> or <code>linkTopology()</code>
and processes all neighbours.</p>]]></long-description>
          <tag line="914" name="see" description="\collapseLAGs()" refers="\collapseLAGs()"/>
          <tag line="914" name="param" description="The result of a call to crawl() or linkTopology()" type="array" variable="$devices">
            <type by_reference="false">array</type>
          </tag>
          <tag line="914" name="return" description="Processed CDP neighbours with LAG ports collapsed" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="914">
          <name>$devices</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="175" code="50018">No DocBlock was found for property $CDP_CACHE_NEIGHBOUR_ADDRESS_TYPES</error>
      <error line="349" code="50018">No DocBlock was found for property $CDP_CACHE_NEIGHBOUR_CAPABILITIES</error>
      <error line="504" code="50018">No DocBlock was found for property $CDP_CACHE_NEIGHBOUR_DUPLEXES</error>
    </parse_markers>
  </file>
  <file path="Cache/APC.php" hash="42269a22c3ff81169533992064d17849" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\Cache" line="44" package="Default">
      <name>APC</name>
      <full_name>\OSS_SNMP\Cache\APC</full_name>
      <extends>OSS_SNMP\Cache</extends>
      <docblock line="44">
        <description><![CDATA[APC cache implementation]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="50" namespace="OSS_SNMP\Cache" package="Default">
        <name>$_ttl</name>
        <default><![CDATA[300]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="56" namespace="OSS_SNMP\Cache" package="Default">
        <name>$_prefix</name>
        <default><![CDATA['OSS_SNMP_']]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="67" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="67">
          <description><![CDATA[Cache constructor.]]></description>
          <long-description><![CDATA[<p>For basic cache, takes no parameters.</p>]]></long-description>
          <tag line="67" name="param" description="Set the default ttl" type="int" variable="$ttl">
            <type by_reference="false">int</type>
          </tag>
          <tag line="67" name="param" description="Set the default prefix for caching variable names" type="string" variable="$prefix">
            <type by_reference="false">string</type>
          </tag>
          <tag line="67" name="return" description="An instance of the cache ($this) for fluent interfaces" type="\OSS_SNMP\Cache\Basic">
            <type by_reference="false">\OSS_SNMP\Cache\Basic</type>
          </tag>
        </docblock>
        <argument line="67">
          <name>$ttl</name>
          <default><![CDATA[300]]></default>
          <type/>
        </argument>
        <argument line="67">
          <name>$prefix</name>
          <default><![CDATA['OSS_SNMP_']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="87" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="87">
          <description><![CDATA[Load a named value from the cache (or null if not present)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="87" name="param" description="The name of the value to load" type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="87" name="return" description="The value from the cache or null" type="mixed|null">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="87">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="120" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="120">
          <description><![CDATA[Save a named value to the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="120" name="param" description="The name of the value to save" type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="120" name="param" description="The value to save" type="mixed" variable="$val">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="120" name="param" description="The time to live of the variable if you want to override the default" type="int" variable="$ttl">
            <type by_reference="false">int</type>
          </tag>
          <tag line="120" name="return" description="The value (as passed)" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="120">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="120">
          <name>$val</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="120">
          <name>$ttl</name>
          <default><![CDATA[NULL]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="136" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="136">
          <description><![CDATA[Clear a named value from the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="param" description="The name of the value to clear" type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="146" package="Default">
        <name>clearAll</name>
        <full_name>clearAll</full_name>
        <docblock line="146">
          <description><![CDATA[Clear all values from the cache]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="50" code="50018">No DocBlock was found for property $_ttl</error>
      <error line="56" code="50018">No DocBlock was found for property $_prefix</error>
    </parse_markers>
  </file>
  <file path="Cache/Basic.php" hash="1bcf2bea73217053f125b86aafa911d8" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP\Cache" line="44" package="Default">
      <name>Basic</name>
      <full_name>\OSS_SNMP\Cache\Basic</full_name>
      <extends>OSS_SNMP\Cache</extends>
      <docblock line="44">
        <description><![CDATA[basic (array) cache implementation]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="protected" line="51" namespace="OSS_SNMP\Cache" package="Default">
        <name>$_cache</name>
        <default><![CDATA[]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="61" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="61">
          <description><![CDATA[Cache constructor.]]></description>
          <long-description><![CDATA[<p>For basic cache, takes no parameters.</p>]]></long-description>
          <tag line="61" name="return" description="An instance of the cache ($this) for fluent interfaces" type="\OSS_SNMP\Cache\Basic">
            <type by_reference="false">\OSS_SNMP\Cache\Basic</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="76" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <docblock line="76">
          <description><![CDATA[Load a named value from the cache (or null if not present)]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="76" name="param" description="The name of the value to load" type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="76" name="return" description="The value from the cache or null" type="mixed|null">
            <type by_reference="false">mixed</type>
            <type by_reference="false">null</type>
          </tag>
        </docblock>
        <argument line="76">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="92" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <docblock line="92">
          <description><![CDATA[Save a named value to the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="92" name="param" description="The name of the value to save" type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
          <tag line="92" name="param" description="The value to save" type="mixed" variable="$val">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="92" name="return" description="The value (as passed)" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="92">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="92">
          <name>$val</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="102" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <docblock line="102">
          <description><![CDATA[Clear a named value from the cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="102" name="param" description="The name of the value to clear" type="string" variable="$var">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
        <argument line="102">
          <name>$var</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP\Cache" line="113" package="Default">
        <name>clearAll</name>
        <full_name>clearAll</full_name>
        <docblock line="113">
          <description><![CDATA[Clear all values from the cache]]></description>
          <long-description><![CDATA[]]></long-description>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="51" code="50018">No DocBlock was found for property $_cache</error>
    </parse_markers>
  </file>
  <file path="Cache.php" hash="60feb8c96fd90fc707e8aae1cbb22a79" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP" line="48" package="Default">
      <name>Cache</name>
      <full_name>\OSS_SNMP\Cache</full_name>
      <extends/>
      <docblock line="48">
        <description><![CDATA[An abstract cache for storing results of SNMP queries .]]></description>
        <long-description><![CDATA[<p>See the implementation in \OSS\Cache\Basic for proper examples and documentation.</p>]]></long-description>
        <tag line="48" name="see" description="\OSS\Cache\Basic" refers="\OSS\Cache\Basic"/>
        <tag line="48" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="48" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP" line="51" package="Default">
        <name>save</name>
        <full_name>save</full_name>
        <argument line="51">
          <name>$varName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="51">
          <name>$varValue</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP" line="52" package="Default">
        <name>load</name>
        <full_name>load</full_name>
        <argument line="52">
          <name>$varName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP" line="53" package="Default">
        <name>clear</name>
        <full_name>clear</full_name>
        <argument line="53">
          <name>$varName</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="true" static="false" visibility="protected" namespace="OSS_SNMP" line="54" package="Default">
        <name>clearAll</name>
        <full_name>clearAll</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="51" code="50010">No DocBlock was found for method save()</error>
      <error line="52" code="50010">No DocBlock was found for method load()</error>
      <error line="53" code="50010">No DocBlock was found for method clear()</error>
      <error line="54" code="50010">No DocBlock was found for method clearAll()</error>
    </parse_markers>
  </file>
  <file path="Exception.php" hash="2dc8cd4b0cece26d909902b23c135c18" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP" line="43" package="Default">
      <name>Exception</name>
      <full_name>\OSS_SNMP\Exception</full_name>
      <extends>Exception</extends>
      <docblock line="43">
        <description><![CDATA[OSS_SNMP\Exception class]]></description>
        <long-description><![CDATA[]]></long-description>
      </docblock>
    </class>
  </file>
  <file path="MIB.php" hash="9677ebf3ac9d462ee2b112da5ac797af" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP" line="44" package="Default">
      <name>MIB</name>
      <full_name>\OSS_SNMP\MIB</full_name>
      <extends/>
      <docblock line="44">
        <description><![CDATA[Parent class for all "MIB" extensions.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <property final="false" static="false" visibility="private" line="49" namespace="OSS_SNMP" package="Default">
        <name>$_snmp</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="58" package="Default">
        <name>setSNMP</name>
        <full_name>setSNMP</full_name>
        <docblock line="58">
          <description><![CDATA[Set the SNMP instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="58" name="param" description="the SNMP instance" type="\OSS\SNMP" variable="$snmp">
            <type by_reference="false">\OSS\SNMP</type>
          </tag>
          <tag line="58" name="return" description="An instance of this class for fluent interfaces" type="\OSS\SNMP\MIB">
            <type by_reference="false">\OSS\SNMP\MIB</type>
          </tag>
        </docblock>
        <argument line="58">
          <name>$snmp</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="68" package="Default">
        <name>getSNMP</name>
        <full_name>getSNMP</full_name>
        <docblock line="68">
          <description><![CDATA[Get the SNMP instance]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="68" name="return" description="Instance of the SNMP object" type="\OSS\SNMP">
            <type by_reference="false">\OSS\SNMP</type>
          </tag>
        </docblock>
      </method>
    </class>
    <parse_markers>
      <error line="49" code="50018">No DocBlock was found for property $_snmp</error>
    </parse_markers>
  </file>
  <file path="SNMP.php" hash="a4ccf84aacfc0edee8912a67ff56be03" package="Default">
    <include line="43" type="Require" package="Default">
      <name/>
    </include>
    <class final="false" abstract="false" namespace="OSS_SNMP" line="54" package="Default">
      <name>SNMP</name>
      <full_name>\OSS_SNMP\SNMP</full_name>
      <extends/>
      <docblock line="54">
        <description><![CDATA[A class for performing SNMP V2 queries and processing the results.]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="54" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="54" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <constant namespace="OSS_SNMP" line="105" package="Default">
        <name>OID_OUTPUT_FULL</name>
        <full_name>OID_OUTPUT_FULL</full_name>
        <value><![CDATA[NULL]]></value>
      </constant>
      <constant namespace="OSS_SNMP" line="106" package="Default">
        <name>OID_OUTPUT_NUMERIC</name>
        <full_name>OID_OUTPUT_NUMERIC</full_name>
        <value><![CDATA[NULL]]></value>
      </constant>
      <constant namespace="OSS_SNMP" line="112" package="Default">
        <name>SNMP_TRUTHVALUE_TRUE</name>
        <full_name>SNMP_TRUTHVALUE_TRUE</full_name>
        <value><![CDATA[1]]></value>
      </constant>
      <constant namespace="OSS_SNMP" line="117" package="Default">
        <name>SNMP_TRUTHVALUE_FALSE</name>
        <full_name>SNMP_TRUTHVALUE_FALSE</full_name>
        <value><![CDATA[2]]></value>
      </constant>
      <property final="false" static="false" visibility="protected" line="57" namespace="OSS_SNMP" package="Default">
        <name>$_community</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="63" namespace="OSS_SNMP" package="Default">
        <name>$_host</name>
        <default><![CDATA[]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="69" namespace="OSS_SNMP" package="Default">
        <name>$_timeout</name>
        <default><![CDATA[1000000]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="75" namespace="OSS_SNMP" package="Default">
        <name>$_retry</name>
        <default><![CDATA[5]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="82" namespace="OSS_SNMP" package="Default">
        <name>$_lastResult</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="88" namespace="OSS_SNMP" package="Default">
        <name>$_cache</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="false" visibility="protected" line="101" namespace="OSS_SNMP" package="Default">
        <name>$_disableCache</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="true" visibility="public" line="124" namespace="OSS_SNMP" package="Default">
        <name>$SNMP_TRUTHVALUES</name>
        <default><![CDATA[array(NULL => NULL, NULL => NULL)]]></default>
      </property>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="136" package="Default">
        <name>__construct</name>
        <full_name>__construct</full_name>
        <docblock line="136">
          <description><![CDATA[The constructor.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="136" name="param" description="The target host for SNMP queries." type="string" variable="$host">
            <type by_reference="false">string</type>
          </tag>
          <tag line="136" name="param" description="The community to use for SNMP queries." type="string" variable="$community">
            <type by_reference="false">string</type>
          </tag>
          <tag line="136" name="return" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP">
            <type by_reference="false">\OSS_SNMP</type>
          </tag>
        </docblock>
        <argument line="136">
          <name>$host</name>
          <default><![CDATA['127.0.0.1']]></default>
          <type/>
        </argument>
        <argument line="136">
          <name>$community</name>
          <default><![CDATA['public']]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="150" package="Default">
        <name>realWalk</name>
        <full_name>realWalk</full_name>
        <docblock line="150">
          <description><![CDATA[Proxy to the snmp2_real_walk command]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="150" name="param" description="The OID to walk" type="string" variable="$oid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="150" name="return" description="The results of the walk" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="150">
          <name>$oid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="163" package="Default">
        <name>get</name>
        <full_name>get</full_name>
        <docblock line="163">
          <description><![CDATA[Get a single SNMP value]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="163" name="throws" description="On *any* SNMP error, warnings are supressed and a generic exception is thrown" type="\OSS_SNMP\Exception">
            <type by_reference="false">\OSS_SNMP\Exception</type>
          </tag>
          <tag line="163" name="param" description="The OID to get" type="string" variable="$oid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="163" name="return" description="The resultant value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="163">
          <name>$oid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="202" package="Default">
        <name>walk1d</name>
        <full_name>walk1d</full_name>
        <docblock line="202">
          <description><![CDATA[Get indexed SNMP values (first degree)]]></description>
          <long-description><![CDATA[<p>Walks the SNMP tree returning an array of key => value pairs.</p>

<p>This is a first degree walk and it will throw an exception if there is more that one degree of values.</p>

<p>I.e. the following query with sample results:</p>

<p>walk1d( '.1.0.8802.1.1.2.1.3.7.1.4' )</p>

<pre><code>  .1.0.8802.1.1.2.1.3.7.1.4.1 = STRING: "GigabitEthernet1/0/1"
  .1.0.8802.1.1.2.1.3.7.1.4.2 = STRING: "GigabitEthernet1/0/2"
  .1.0.8802.1.1.2.1.3.7.1.4.3 = STRING: "GigabitEthernet1/0/3"
  .....
</code></pre>

<p>would yield an array:</p>

<pre><code> 1 =&gt; GigabitEthernet1/0/1
 2 =&gt; GigabitEthernet1/0/2
 3 =&gt; GigabitEthernet1/0/3
</code></pre>]]></long-description>
          <tag line="202" name="param" description="The OID to walk" type="string" variable="$oid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="202" name="return" description="The resultant values" type="array">
            <type by_reference="false">array</type>
          </tag>
          <tag line="202" name="throws" description="On *any* SNMP error, warnings are supressed and a generic exception is thrown" type="\OSS_SNMPException">
            <type by_reference="false">\OSS_SNMPException</type>
          </tag>
        </docblock>
        <argument line="202">
          <name>$oid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="251" package="Default">
        <name>subOidWalk</name>
        <full_name>subOidWalk</full_name>
        <docblock line="251">
          <description><![CDATA[Get indexed SNMP values where the array key is the given position of the OID]]></description>
          <long-description><![CDATA[<p>I.e. the following query with sample results:</p>

<p>subOidWalk( '.1.3.6.1.4.1.9.9.23.1.2.1.1.9', 15 )</p>

<pre><code>  .1.3.6.1.4.1.9.9.23.1.2.1.1.9.10101.5 = Hex-STRING: 00 00 00 01
  .1.3.6.1.4.1.9.9.23.1.2.1.1.9.10105.2 = Hex-STRING: 00 00 00 01
  .1.3.6.1.4.1.9.9.23.1.2.1.1.9.10108.4 = Hex-STRING: 00 00 00 01
</code></pre>

<p>would yield an array:</p>

<pre><code> 10101 =&gt; Hex-STRING: 00 00 00 01
 10105 =&gt; Hex-STRING: 00 00 00 01
 10108 =&gt; Hex-STRING: 00 00 00 01
</code></pre>]]></long-description>
          <tag line="251" name="throws" description="On *any* SNMP error, warnings are supressed and a generic exception is thrown" type="\OSS_SNMP\Exception">
            <type by_reference="false">\OSS_SNMP\Exception</type>
          </tag>
          <tag line="251" name="param" description="The OID to walk" type="string" variable="$oid">
            <type by_reference="false">string</type>
          </tag>
          <tag line="251" name="param" description="The position of the OID to use as the key" type="int" variable="$position">
            <type by_reference="false">int</type>
          </tag>
          <tag line="251" name="return" description="The resultant values" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
        <argument line="251">
          <name>$oid</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="251">
          <name>$position</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="283" package="Default">
        <name>parseSnmpValue</name>
        <full_name>parseSnmpValue</full_name>
        <docblock line="283">
          <description><![CDATA[Parse the result of an SNMP query into a PHP type]]></description>
          <long-description><![CDATA[<p>For example, [STRING: "blah"] is parsed to a PHP string containing: blah</p>]]></long-description>
          <tag line="283" name="param" description="The value to parse" type="string" variable="$v">
            <type by_reference="false">string</type>
          </tag>
          <tag line="283" name="return" description="The parsed value" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="283" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="283">
          <name>$v</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="337" package="Default">
        <name>ppTruthValue</name>
        <full_name>ppTruthValue</full_name>
        <docblock line="337">
          <description><![CDATA[Utility function to convert TruthValue SNMP responses to true / false]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="337" name="param" description="The TruthValue ( 1 =&gt; true, 2 =&gt; false) to convert" type="integer" variable="$value">
            <type by_reference="false">integer</type>
          </tag>
          <tag line="337" name="return" description="" type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
        <argument line="337">
          <name>$value</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="360" package="Default">
        <name>translate</name>
        <full_name>translate</full_name>
        <docblock line="360">
          <description><![CDATA[Utility function to translate one value(s) to another via an associated array]]></description>
          <long-description><![CDATA[<p>I.e. all elements '$value' will be replaced with $translator( $value ) where
$translator is an associated array.</p>

<p>Huh? Just read the code below!</p>]]></long-description>
          <tag line="360" name="param" description="A scalar or array or values to translate" type="mixed" variable="$values">
            <type by_reference="false">mixed</type>
          </tag>
          <tag line="360" name="param" description="An associated array to use to translate the values" type="array" variable="$translator">
            <type by_reference="false">array</type>
          </tag>
          <tag line="360" name="return" description="The translated scalar or array" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
        <argument line="360">
          <name>$values</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="360">
          <name>$translator</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="389" package="Default">
        <name>setOidOutputFormat</name>
        <full_name>setOidOutputFormat</full_name>
        <docblock line="389">
          <description><![CDATA[Sets the output format for SNMP queries.]]></description>
          <long-description><![CDATA[<p>Should be one of the class OID_OUTPUT_* constants</p>]]></long-description>
          <tag line="389" name="param" description="The fomat to use" type="int" variable="$f">
            <type by_reference="false">int</type>
          </tag>
          <tag line="389" name="return" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP\SNMP">
            <type by_reference="false">\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
        <argument line="389">
          <name>$f</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="402" package="Default">
        <name>setHost</name>
        <full_name>setHost</full_name>
        <docblock line="402">
          <description><![CDATA[Sets the target host for SNMP queries.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="402" name="param" description="The target host for SNMP queries." type="string" variable="$h">
            <type by_reference="false">string</type>
          </tag>
          <tag line="402" name="return" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP\SNMP">
            <type by_reference="false">\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
        <argument line="402">
          <name>$h</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="419" package="Default">
        <name>getHost</name>
        <full_name>getHost</full_name>
        <docblock line="419">
          <description><![CDATA[Returns the target host as currently configured for SNMP queries]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="419" name="return" description="The target host as currently configured for SNMP queries" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="430" package="Default">
        <name>setCommunity</name>
        <full_name>setCommunity</full_name>
        <docblock line="430">
          <description><![CDATA[Sets the community string to use for SNMP queries.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="430" name="param" description="The community to use for SNMP queries." type="string" variable="$c">
            <type by_reference="false">string</type>
          </tag>
          <tag line="430" name="return" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP">
            <type by_reference="false">\OSS_SNMP</type>
          </tag>
        </docblock>
        <argument line="430">
          <name>$c</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="441" package="Default">
        <name>getCommunity</name>
        <full_name>getCommunity</full_name>
        <docblock line="441">
          <description><![CDATA[Returns the community string currently in use.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="441" name="return" description="The community string currently in use." type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="452" package="Default">
        <name>setTimeout</name>
        <full_name>setTimeout</full_name>
        <docblock line="452">
          <description><![CDATA[Sets the timeout to use for SNMP queries (microseconds).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="452" name="param" description="The timeout to use for SNMP queries (microseconds)." type="int" variable="$t">
            <type by_reference="false">int</type>
          </tag>
          <tag line="452" name="return" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP">
            <type by_reference="false">\OSS_SNMP</type>
          </tag>
        </docblock>
        <argument line="452">
          <name>$t</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="463" package="Default">
        <name>getTimeout</name>
        <full_name>getTimeout</full_name>
        <docblock line="463">
          <description><![CDATA[Returns the SNMP query timeout (microseconds).]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="463" name="return" description="The the SNMP query timeout (microseconds)" type="int">
            <type by_reference="false">int</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="474" package="Default">
        <name>setRetry</name>
        <full_name>setRetry</full_name>
        <docblock line="474">
          <description><![CDATA[Sets the SNMP query retry count.]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="474" name="param" description="The SNMP query retry count" type="int" variable="$r">
            <type by_reference="false">int</type>
          </tag>
          <tag line="474" name="return" description="An instance of $this (for fluent interfaces)" type="\OSS_SNMP">
            <type by_reference="false">\OSS_SNMP</type>
          </tag>
        </docblock>
        <argument line="474">
          <name>$r</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="485" package="Default">
        <name>getRetry</name>
        <full_name>getRetry</full_name>
        <docblock line="485">
          <description><![CDATA[Returns the SNMP query retry count]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="485" name="return" description="The SNMP query retry count" type="string">
            <type by_reference="false">string</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="495" package="Default">
        <name>getLastResult</name>
        <full_name>getLastResult</full_name>
        <docblock line="495">
          <description><![CDATA[Returns the unaltered original last SNMP result]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="495" name="return" description="The unaltered original last SNMP result" type="mixed">
            <type by_reference="false">mixed</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="505" package="Default">
        <name>getResultCache</name>
        <full_name>getResultCache</full_name>
        <docblock line="505">
          <description><![CDATA[Returns the internal result cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="505" name="return" description="The internal result cache" type="array">
            <type by_reference="false">array</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="516" package="Default">
        <name>disableCache</name>
        <full_name>disableCache</full_name>
        <docblock line="516">
          <description><![CDATA[Disable lookups of the local cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="516" name="return" description="An instance of this for fluent interfaces" type="\SNMP">
            <type by_reference="false">\SNMP</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="528" package="Default">
        <name>enableCache</name>
        <full_name>enableCache</full_name>
        <docblock line="528">
          <description><![CDATA[Enable lookups of the local cache]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="528" name="return" description="An instance of this for fluent interfaces" type="\SNMP">
            <type by_reference="false">\SNMP</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="539" package="Default">
        <name>cache</name>
        <full_name>cache</full_name>
        <docblock line="539">
          <description><![CDATA[Query whether we are using the cache or not]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="539" name="return" description="True of the local lookup cache is enabled. Otherwise false." type="boolean">
            <type by_reference="false">boolean</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="550" package="Default">
        <name>setCache</name>
        <full_name>setCache</full_name>
        <docblock line="550">
          <description><![CDATA[Set the cache to use]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="550" name="param" description="The cache to use" type="\OSS_SNMP\Cache" variable="$c">
            <type by_reference="false">\OSS_SNMP\Cache</type>
          </tag>
          <tag line="550" name="return" description="For fluent interfaces" type="\OSS_SNMP\SNMP">
            <type by_reference="false">\OSS_SNMP\SNMP</type>
          </tag>
        </docblock>
        <argument line="550">
          <name>$c</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="566" package="Default">
        <name>getCache</name>
        <full_name>getCache</full_name>
        <docblock line="566">
          <description><![CDATA[Get the cache in use (or create a Cache\Basic instance]]></description>
          <long-description><![CDATA[<p>We kind of mandate the use of a cache as the code is written with a cache in mind.
You are free to disable it via disableCache() but your machines may be hammered!</p>

<p>We would suggest disableCache() / enableCache() used in pairs only when really needed.</p>]]></long-description>
          <tag line="566" name="return" description="The cache object" type="\OSS_SNMP\Cache">
            <type by_reference="false">\OSS_SNMP\Cache</type>
          </tag>
        </docblock>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="582" package="Default">
        <name>__call</name>
        <full_name>__call</full_name>
        <docblock line="582">
          <description><![CDATA[Magic method for generic function calls]]></description>
          <long-description><![CDATA[]]></long-description>
          <tag line="582" name="param" description="" type="string" variable="$method">
            <type by_reference="false">string</type>
          </tag>
          <tag line="582" name="param" description="" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="582" name="throws" description="" type="\Exception">
            <type by_reference="false">\Exception</type>
          </tag>
        </docblock>
        <argument line="582">
          <name>$method</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="582">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
      <method final="false" abstract="false" static="false" visibility="public" namespace="OSS_SNMP" line="604" package="Default">
        <name>useExtension</name>
        <full_name>useExtension</full_name>
        <docblock line="604">
          <description><![CDATA[This is the MIB Extension magic]]></description>
          <long-description><![CDATA[<p>Calling $this->useXXX_YYY_ZZZ()->fn() will instantiate
an extension MIB class is the given name and this $this SNMP
instance and then call fn().</p>

<p>See the examples for more information.</p>]]></long-description>
          <tag line="604" name="param" description="The extension class to use" type="string" variable="$mib">
            <type by_reference="false">string</type>
          </tag>
          <tag line="604" name="param" description="" type="array" variable="$args">
            <type by_reference="false">array</type>
          </tag>
          <tag line="604" name="return" description="" type="\OSS_SNMP\MIBS">
            <type by_reference="false">\OSS_SNMP\MIBS</type>
          </tag>
        </docblock>
        <argument line="604">
          <name>$mib</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
        <argument line="604">
          <name>$args</name>
          <default><![CDATA[]]></default>
          <type/>
        </argument>
      </method>
    </class>
    <parse_markers>
      <error line="57" code="50018">No DocBlock was found for property $_community</error>
      <error line="63" code="50018">No DocBlock was found for property $_host</error>
      <error line="69" code="50018">No DocBlock was found for property $_timeout</error>
      <error line="75" code="50018">No DocBlock was found for property $_retry</error>
      <error line="82" code="50018">No DocBlock was found for property $_lastResult</error>
      <error line="88" code="50018">No DocBlock was found for property $_cache</error>
      <error line="101" code="50018">No DocBlock was found for property $_disableCache</error>
      <error line="124" code="50018">No DocBlock was found for property $SNMP_TRUTHVALUES</error>
    </parse_markers>
  </file>
  <file path="Timer.php" hash="a82b69ac9dea2483375654cf1a90e2e5" package="Default">
    <class final="false" abstract="false" namespace="OSS_SNMP" line="44" package="Default">
      <name>Timer</name>
      <full_name>\OSS_SNMP\Timer</full_name>
      <extends/>
      <docblock line="44">
        <description><![CDATA[A class for timing PHP scripts]]></description>
        <long-description><![CDATA[]]></long-description>
        <tag line="44" name="copyright" description="Copyright (c) 2012, Open Source Solutions Limited, Dublin, Ireland"/>
        <tag line="44" name="author" description="Barry O'Donovan &lt;barry@opensolutions.ie&gt;"/>
      </docblock>
      <property final="false" static="true" visibility="private" line="47" namespace="OSS_SNMP" package="Default">
        <name>$_start</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <property final="false" static="true" visibility="private" line="50" namespace="OSS_SNMP" package="Default">
        <name>$_time</name>
        <default><![CDATA[NULL]]></default>
      </property>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="52" package="Default">
        <name>start</name>
        <full_name>start</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="57" package="Default">
        <name>end</name>
        <full_name>end</full_name>
      </method>
      <method final="false" abstract="false" static="true" visibility="public" namespace="OSS_SNMP" line="62" package="Default">
        <name>time</name>
        <full_name>time</full_name>
      </method>
    </class>
    <parse_markers>
      <error line="47" code="50018">No DocBlock was found for property $_start</error>
      <error line="50" code="50018">No DocBlock was found for property $_time</error>
      <error line="52" code="50010">No DocBlock was found for method start()</error>
      <error line="57" code="50010">No DocBlock was found for method end()</error>
      <error line="62" code="50010">No DocBlock was found for method time()</error>
    </parse_markers>
  </file>
  <package name="Default" full_name="Default"/>
  <namespace name="OSS" full_name="OSS">
    <namespace name="SNMP" full_name="OSS\SNMP">
      <namespace name="MIBS" full_name="OSS\SNMP\MIBS">
        <namespace name="Cisco" full_name="OSS\SNMP\MIBS\Cisco"/>
      </namespace>
    </namespace>
  </namespace>
  <namespace name="OSS_SNMP" full_name="OSS_SNMP">
    <namespace name="Cache" full_name="OSS_SNMP\Cache"/>
    <namespace name="MIBS" full_name="OSS_SNMP\MIBS">
      <namespace name="Asterisk" full_name="OSS_SNMP\MIBS\Asterisk"/>
      <namespace name="Cisco" full_name="OSS_SNMP\MIBS\Cisco"/>
    </namespace>
  </namespace>
  <marker count="1">todo</marker>
  <marker count="0">fixme</marker>
  <deprecated count="0"/>
</project>
